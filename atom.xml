<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lin&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lbinin.com/"/>
  <updated>2017-08-16T04:09:47.000Z</updated>
  <id>http://www.lbinin.com/</id>
  
  <author>
    <name>Linbin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UI调试神器 —— Injection for Xcode（Xcode插件）</title>
    <link href="http://www.lbinin.com/2017/08/16/UI%E8%B0%83%E8%AF%95%E7%A5%9E%E5%99%A8%20%E2%80%94%E2%80%94%20Injection%20for%20Xcode/"/>
    <id>http://www.lbinin.com/2017/08/16/UI调试神器 —— Injection for Xcode/</id>
    <published>2017-08-16T03:09:14.000Z</published>
    <updated>2017-08-16T04:09:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在写前端的时候，非常喜欢那种一写完就能立马看到自己代码效果的过程。在iOS开发过程中，编写界面代码时需要查看界面的布局或者颜色等是否符合要求，此时重新编译整个项目 -&gt; 安装到模拟器 -&gt; 启动项目 -&gt; 进入相关页面，界面开发过程中一大半的时间浪费在这无谓的等待上。一天躺在床上，思考着有这么多的神级前辈开发过iOS，他们在开发界面的时候也是这样等待吗，效率如此低下的工作会发生在他们身上吗？我觉的其中必要蹊跷，应该会有界面实施预览的工具，上网一搜，果然，其中推荐最多的还是 <strong>johnno1962</strong> 编写的 <strong>injectionforxcode</strong> Xcode插件。</p>
<p>😆记录下我使用的第一款Xcode插件~</p>
<p>Injection GitHub: <a href="https://github.com/johnno1962/injectionforxcode" target="_blank" rel="external">Injection Plugin for Xcode</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>话不多说，咱们先来安装下这款插件</p>
<p>从ReadMe可以知道</p>
<blockquote>
<p>With Xcode, either install via <strong>Alcatraz</strong>, or install by cloning this repo and build <strong>InjectionPluginLite/InjectionPlugin.xcodeproj</strong>. If you are building locally, note that you need to restart Xcode to load the plugin. A popup should appear asking to confirm loading a plugin not signed by Apple, that signals that the plugin is set up.</p>
</blockquote>
<p>可以使用老牌Xcode包管理工具 <strong><a href="http://alcatraz.io/" target="_blank" rel="external">Alcatraz</a></strong>，不过由于这款工具不再支持Xcode8，在Xcode8上安装需要代码签名啥的，而且目前我只需要安装Injection这一款插件所以我就直接来Git上查看其他的安装方法。</p>
<h4 id="1-编译-InjectionPlugin-xcodeproj-推荐"><a href="#1-编译-InjectionPlugin-xcodeproj-推荐" class="headerlink" title="1. 编译 InjectionPlugin.xcodeproj (推荐)"></a>1. 编译 InjectionPlugin.xcodeproj (推荐)</h4><ul>
<li><p>Clone或者Download该项目，打开 <strong><em>InjectionPluginLite/InjectionPlugin.xcodeproj</em></strong> 工程文件，在Xcode上编译。</p>
</li>
<li><p>编译成功后，重启Xcode</p>
</li>
<li><p>此时Xcode会提示你是否加载该插件，选择 <strong>“Load Bundle”</strong>。</p>
</li>
</ul>
<p><img src="/2017/08/16/UI调试神器 —— Injection for Xcode/1.png" alt="提示是否加载该插件"></p>
<ul>
<li>安装成功</li>
</ul>
<h4 id="2-下载App"><a href="#2-下载App" class="headerlink" title="2. 下载App"></a>2. 下载App</h4><p>下载地址: <a href="http://johnholdsworth.com/injection.html" target="_blank" rel="external">Injection II, the App</a></p>
<p>安装客户端，两者装完之后操作都一样</p>
<p>个人推荐第一种安装方法，前者是将插件集成到Xcode里，启动Xcode后就不用另外启动App。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>以第一种安装方法为例，安装好后Xcode的 <strong>“Product”</strong> 选项中可以在最下面看到多出两个选项</p>
<p><img src="/2017/08/16/UI调试神器 —— Injection for Xcode/2.png" alt="菜单"></p>
<p>以Swift为例，在项目目录下创建文件名为 <strong>main.m</strong> 的文件，然后选择 <strong>“Product”</strong> -&gt; <strong>“Injection Plugin”</strong> -&gt; <strong>“Patch project for injection”</strong></p>
<p>之后会在 <strong>main.m</strong> 文件中添加几行代码，这并不会对你的程序有任何的影响。</p>
<p>编辑任意一个界面控制文件，修改内容后，按下 <strong>Ctrl + =</strong> 快捷键，可以看到左上方有一个进度条，此时就可以看到界面的更改啦~</p>
<h2 id="注意实现"><a href="#注意实现" class="headerlink" title="注意实现"></a>注意实现</h2><p>刚开始的时候我编辑的配置文件，因为在一些控制器里面会读取到这些内容，所以我在打开配置文件的情况下按下快捷键 <strong>Ctrl + =</strong>，结果出错，经过一上午的捣鼓，发现这款插件要在控制器文件下使用，比如：你更改了配置文件，你要在相应界面的ViewController下去 <strong>Ctrl + =</strong>，才会不报错。</p>
<p>在我打开ViewController的情况下，更改了内容，但是按下 <strong>Ctrl + =</strong>，提示以下信息，并且页面没有任何变化。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Compiling /Users/abc1/Desktop/GongGongiOS/GongGong/GongGong/MeVC.swift</div><div class="line">objc[5630]: Class _TtC8GongGong4MeVC is implemented in both /Users/abc1/Library/Developer/CoreSimulator/Devices/3EABA886-CFF9-42CE-B269-757BD06797E5/data/Containers/Bundle/Application/97B1C2C4-AD99-444B-8A20-0E62445CF226/GongGong.app/GongGong (0x109e985d0) and /Users/abc1/Desktop/GongGongiOS/GongGong/iOSInjectionProject/build/Debug-iphonesimulator/InjectionBundle11.bundle/InjectionBundle (0x11f1cf3b0). One of the two will be used. Which one is undefined.</div><div class="line">2017-08-16 11:42:32.171 GongGong[5630:203662] Ignore any warning, Swizzled GongGong.MeVC 0x11f1cf3b0 -&gt; 0x109e985d0</div></pre></td></tr></table></figure>
<p>到作者的issue上看到了类似的问题: <a href="https://github.com/johnno1962/injectionforxcode/issues/93" target="_blank" rel="external">my injection doesn’t work</a></p>
<p>作者对这个warning给出的解释大概是可以无视这个warning -=-</p>
<p>并且作者详细说了，在更新界面的时候必须调用 <strong>viewDidLoad</strong> 方法。</p>
<p>此时返回ReadMe，发现作者也给出了方法</p>
<blockquote>
<p>Callbacks in Your Code</p>
<p>You can build on top of Injection from three callbacks:</p>
<ul>
<li><ul>
<li>(void)injected as an instance method, which gives you the chance to re-update an object with new contexts.</li>
</ul>
</li>
<li><ul>
<li>(void)injected as a class method, making it possible to update globals with new information</li>
</ul>
</li>
<li>Listening for INJECTION_BUNDLE_NOTIFICATION, allowing other classes to listen out for injection calls, this is useful for providing app level changes.</li>
</ul>
</blockquote>
<p>由于我使用的Swift，我在viewController中添加</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">injected</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="keyword">self</span>. viewDidLoad()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果报错</p>
<p><img src="/2017/08/16/UI调试神器 —— Injection for Xcode/3.png" alt="报错"></p>
<p>非常无奈，结果仔细一看上面说明中的第三条，还可以添加Notification监听，果断尝试了一下，在 <strong>viewDidLoad</strong> 中添加如下代码：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="type">NotificationCenter</span>.<span class="keyword">default</span>.addObserver(<span class="keyword">self</span>, selector: #selector(refresh), name: <span class="type">NSNotification</span>.<span class="type">Name</span>(rawValue: <span class="string">"INJECTION_BUNDLE_NOTIFICATION"</span>), object: <span class="literal">nil</span>)</div></pre></td></tr></table></figure>
<p>然后在class中添加：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">refresh</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">self</span>.viewDidLoad()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>尝试一下</p>
<p><img src="/2017/08/16/UI调试神器 —— Injection for Xcode/4.gif" alt="演示GIF"></p>
<p>完美~</p>
<p>更多功能大家可以在GitHub上去查看，我就不多啰嗦了~感谢观看</p>
<hr>
<p>发布时间: 2017-08-16 11:09:14</p>
<p>原始链接: <a href="http://blog.lbinin.com/2017/08/11/Swift%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E5%BA%93SnapKit%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/" target="_blank" rel="external">Swift自动布局库SnapKit使用介绍</a></p>
<p>许可协议: <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="external">署名-非商业性使用-禁止演绎 4.0 国际</a> 转载请保留原文链接及作者。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在写前端的时候，非常喜欢那种一写完就能立马看到自己代码效果的过程。在iOS开发过程中，编写界面代码时需要查看界面的布局或者颜色等是否符合要求
    
    </summary>
    
      <category term="Xcode" scheme="http://www.lbinin.com/categories/Xcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Swift自动布局库SnapKit使用介绍</title>
    <link href="http://www.lbinin.com/2017/08/11/Swift%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E5%BA%93SnapKit%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.lbinin.com/2017/08/11/Swift自动布局库SnapKit使用介绍/</id>
    <published>2017-08-11T10:12:52.000Z</published>
    <updated>2017-08-16T04:04:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SnapKit介绍"><a href="#SnapKit介绍" class="headerlink" title="SnapKit介绍"></a>SnapKit介绍</h2><p>SnapKit是一个优秀的第三方自适应布局库，它可以让iOS、OS X应用更简单地实现自动布局（Auto Layout）</p>
<p>GtiHub地址：<a href="https://github.com/SnapKit/SnapKit" target="_blank" rel="external">https://github.com/SnapKit/SnapKit</a></p>
<h2 id="SnapKit安装"><a href="#SnapKit安装" class="headerlink" title="SnapKit安装"></a>SnapKit安装</h2><p>在SnapKit的GitHub上已经说了如何安装，这里我们利用Pod安装一下，因为我用的是Swift3，所以安装SnapKit3.0以上的版本</p>
<p>如果未安装Pod，可以参考下面这篇博文</p>
<p><a href="http://blog.lbinin.com/2017/07/02/Mac%E4%B8%8B%E5%AE%89%E8%A3%85CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="external">Mac下安装CocoaPods安装和使用教程</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">use_frameworks!</div><div class="line"></div><div class="line">target &apos;&lt;Your Target Name&gt;&apos; do</div><div class="line">    pod &apos;SnapKit&apos;, &apos;~&gt; 3.2.0&apos;</div><div class="line">end</div></pre></td></tr></table></figure>
<h2 id="SnapKit使用"><a href="#SnapKit使用" class="headerlink" title="SnapKit使用"></a>SnapKit使用</h2><p>在屏幕中间放置一个100*100的正方形</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MeVC</span>: <span class="title">UIViewController</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line">  </div><div class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">super</span>.viewDidLoad()</div><div class="line">    </div><div class="line">    box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">    <span class="keyword">self</span>.view.addSubview(box)</div><div class="line">    </div><div class="line">    box.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">      make.width.equalTo(<span class="number">100</span>)</div><div class="line">      make.height.equalTo(<span class="number">100</span>)</div><div class="line">      <span class="comment">// 以上两句可以合成为一句 make.width.height.equalTo(100)</span></div><div class="line">      make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SnapKit的使用方法"><a href="#SnapKit的使用方法" class="headerlink" title="SnapKit的使用方法"></a>SnapKit的使用方法</h3><p>通过 <strong><code>snp.makeConstraints</code></strong> 方法给view添加约束，约束有几种，分别是 <strong>边距</strong>，<strong>宽</strong>，<strong>高</strong>，<strong>左上右下距离</strong>，<strong>基准线</strong>。同时，添加过约束后可以有修正，修正有位移修正（<strong>inset</strong>、<strong>offset</strong>）和倍率修正（<strong>multipliedBy</strong>）</p>
<blockquote>
<p>语法一般是： <strong>make.equalTo</strong> 或 <strong>make.greaterThanOrEqualTo</strong> 或 <strong>make.lessThanOrEqualTo</strong> + 倍数和位移修正。</p>
<ul>
<li><p>equalTo：等于 </p>
</li>
<li><p>lessThanOrEqualTo：小于等于</p>
</li>
<li><p>greaterThanOrEqualTo：大于等于</p>
</li>
</ul>
</blockquote>
<h3 id="约束条件参数支持如下三种类型："><a href="#约束条件参数支持如下三种类型：" class="headerlink" title="约束条件参数支持如下三种类型："></a>约束条件参数支持如下三种类型：</h3><h4 id="1-视图属性（ViewAttribute）"><a href="#1-视图属性（ViewAttribute）" class="headerlink" title="1.视图属性（ViewAttribute）"></a>1.视图属性（ViewAttribute）</h4><table>
<thead>
<tr>
<th>视图属性（ViewAttribute）</th>
<th>布局属性（NSLayoutAttribute）</th>
</tr>
</thead>
<tbody>
<tr>
<td>view.snp.left</td>
<td>NSLayoutAttribute.Left</td>
</tr>
<tr>
<td>view.snp.right</td>
<td>NSLayoutAttribute.Right</td>
</tr>
<tr>
<td>view.snp.top</td>
<td>NSLayoutAttribute.Top</td>
</tr>
<tr>
<td>view.snp.bottom</td>
<td>NSLayoutAttribute.Bottom</td>
</tr>
<tr>
<td>view.snp.leading</td>
<td>NSLayoutAttribute.Leading</td>
</tr>
<tr>
<td>view.snp.trailing</td>
<td>NSLayoutAttribute.Trailing</td>
</tr>
<tr>
<td>view.snp.width</td>
<td>NSLayoutAttribute.Width</td>
</tr>
<tr>
<td>view.snp.height</td>
<td>NSLayoutAttribute.Height</td>
</tr>
<tr>
<td>view.snp.centerX</td>
<td>NSLayoutAttribute.CenterX</td>
</tr>
<tr>
<td>view.snp.centerY</td>
<td>NSLayoutAttribute.CenterY</td>
</tr>
<tr>
<td>view.snp.baseline</td>
<td>NSLayoutAttribute.Baseline</td>
</tr>
</tbody>
</table>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//使当前视图对象的中心x坐标小于等于视图view2的左边的x坐标</span></div><div class="line">make.centerX.lessThanOrEqualTo(box.snp.<span class="keyword">left</span>)</div></pre></td></tr></table></figure>
<h4 id="2-视图关系（UIView-NSView）"><a href="#2-视图关系（UIView-NSView）" class="headerlink" title="2.视图关系（UIView/NSView）"></a>2.视图关系（UIView/NSView）</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 让view.left 大于等于 label.left</span></div><div class="line">make.<span class="keyword">left</span>.greaterThanOrEqualTo(label)</div><div class="line"><span class="comment">// 等价于</span></div><div class="line">make.<span class="keyword">left</span>.greaterThanOrEqualTo(label.snp.<span class="keyword">left</span>)</div><div class="line"></div><div class="line">make.width.equalTo(box.snp.width)</div><div class="line">make.height.equalTo(box.snp.height)</div><div class="line"><span class="comment">// 等价于</span></div><div class="line">make.width.height.equalTo(box)</div></pre></td></tr></table></figure>
<h4 id="3-严格检测（Strick-Checks）"><a href="#3-严格检测（Strick-Checks）" class="headerlink" title="3.严格检测（Strick Checks）"></a>3.严格检测（Strick Checks）</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 将宽度和高度属性设置为常量值</span></div><div class="line">make.height.equalTo(<span class="number">20</span>)</div><div class="line">make.width.equalTo(<span class="number">20</span>)</div><div class="line">make.top.equalTo(<span class="number">42</span>)</div></pre></td></tr></table></figure>
<h3 id="给视图的各种属性设置约束"><a href="#给视图的各种属性设置约束" class="headerlink" title="给视图的各种属性设置约束"></a>给视图的各种属性设置约束</h3><h4 id="1-width、height属性"><a href="#1-width、height属性" class="headerlink" title="1.width、height属性"></a>1.width、height属性</h4><p>这两个属性的自动布局允许设置为常量值。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make.height.equalTo(<span class="number">20</span>)</div><div class="line">make.width.equalTo(<span class="keyword">self</span>.buttonSize.width)</div></pre></td></tr></table></figure>
<h4 id="2-left、right、top、centerX、centerY等其他属性"><a href="#2-left、right、top、centerX、centerY等其他属性" class="headerlink" title="2.left、right、top、centerX、centerY等其他属性"></a>2.left、right、top、centerX、centerY等其他属性</h4><p>这些属性直接设置常量值，表示他们相对于父容器的相对约束条件。比如我们将黄色方块放置橙色方块内部的左下角位置。</p>
<p><img src="/2017/08/11/Swift自动布局库SnapKit使用介绍/1.png" alt="黄色方块放置橙色方块内部的左下角位置"></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> smallBox = <span class="type">UIView</span>()</div><div class="line">  </div><div class="line">box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line"><span class="keyword">self</span>.view.addSubview(box)</div><div class="line">    </div><div class="line">box.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.width.height.equalTo(<span class="number">200</span>)</div><div class="line">  make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">&#125;</div><div class="line">    </div><div class="line">smallBox.backgroundColor = <span class="type">UIColor</span>.yellow</div><div class="line">box.addSubview(smallBox)</div><div class="line">    </div><div class="line">smallBox.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.width.height.equalTo(<span class="number">100</span>)</div><div class="line">  make.<span class="keyword">left</span>.equalTo(<span class="number">0</span>)</div><div class="line">  make.bottom.equalTo(<span class="number">0</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>若这些属性没有设置则不对父元素生效，如：不写 <code>make.left.equalTo(0)</code> 则会在屏幕边缘</p>
<p>若不设置元素的宽度和高度，可以通过设置边界确定UIView的大小和位置，如：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">box1.snp.makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">  make.<span class="keyword">left</span>.equalTo(<span class="number">20</span>)</div><div class="line">  make.<span class="keyword">right</span>.equalTo(-<span class="number">20</span>)</div><div class="line">  make.height.equalTo(<span class="number">40</span>)</div><div class="line">  make.top.equalTo(<span class="number">20</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 下面视图顶部与上面视图底部平齐</span></div><div class="line">make.top.equalTo(box1.snp.bottom)</div></pre></td></tr></table></figure>
<h4 id="3-edges-边缘）"><a href="#3-edges-边缘）" class="headerlink" title="3.edges(边缘）"></a>3.edges(边缘）</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//让当前视图 的 上下左右(top,left,bottom,right) 等于 view2</span></div><div class="line">make.edges.equalTo(view2)</div></pre></td></tr></table></figure>
<h4 id="4-size-尺寸）"><a href="#4-size-尺寸）" class="headerlink" title="4.size(尺寸）"></a>4.size(尺寸）</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//当前视图宽高 &gt;= titleLabel</span></div><div class="line">make.size.greaterThanOrEqualTo(titleLabel)</div></pre></td></tr></table></figure>
<h4 id="5-center-中心）"><a href="#5-center-中心）" class="headerlink" title="5.center(中心）"></a>5.center(中心）</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//当前视图与 button1中心相同 （centerX 和 centerY）</span></div><div class="line">make.center.equalTo(button1)</div></pre></td></tr></table></figure>
<h3 id="位移修正与倍率修正"><a href="#位移修正与倍率修正" class="headerlink" title="位移修正与倍率修正"></a>位移修正与倍率修正</h3><h4 id="1-内位移修正：inset"><a href="#1-内位移修正：inset" class="headerlink" title="1.内位移修正：inset"></a>1.内位移修正：inset</h4><p>比如下图中黄色视图view，它距离父视图上、左、下、右边距分别是10、15、20、25</p>
<p><img src="/2017/08/11/Swift自动布局库SnapKit使用介绍/2.png" alt="黄色视图距离父视图上、左、下、右边距分别是10、15、20、25"></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> smallBox = <span class="type">UIView</span>()</div><div class="line">  </div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">super</span>.viewDidLoad()</div><div class="line">    </div><div class="line">  box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">  <span class="keyword">self</span>.view.addSubview(box)</div><div class="line">    </div><div class="line">  box.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">    make.width.height.equalTo(<span class="number">200</span>)</div><div class="line">    make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  &#125;</div><div class="line">      </div><div class="line">  smallBox.backgroundColor = <span class="type">UIColor</span>.yellow</div><div class="line">  box.addSubview(smallBox)</div><div class="line">      </div><div class="line">  smallBox.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">    make.edges.equalTo(box).inset(<span class="type">UIEdgeInsetsMake</span>(<span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>))</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">make.top.equalTo(boxOutter).offset(<span class="number">10</span>)</div><div class="line">make.<span class="keyword">left</span>.equalTo(boxOutter).offset(<span class="number">15</span>)</div><div class="line">make.bottom.equalTo(boxOutter).offset(-<span class="number">20</span>)</div><div class="line">make.<span class="keyword">right</span>.equalTo(boxOutter).offset(-<span class="number">25</span>)</div><div class="line"><span class="comment">// 等价于</span></div><div class="line">make.edges.equalTo(box).inset(<span class="type">UIEdgeInsetsMake</span>(<span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>))</div></pre></td></tr></table></figure>
<h4 id="2-外位移修正：offset"><a href="#2-外位移修正：offset" class="headerlink" title="2.外位移修正：offset"></a>2.外位移修正：offset</h4><p>下面让黄色视图比橙色视图宽度、高度均减50。</p>
<p><img src="/2017/08/11/Swift自动布局库SnapKit使用介绍/3.png" alt="黄色视图比橙色视图宽度、高度均减50"></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line"><span class="keyword">super</span>.viewDidLoad()</div><div class="line">    </div><div class="line">box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line"><span class="keyword">self</span>.view.addSubview(box)</div><div class="line">    </div><div class="line">box.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.width.height.equalTo(<span class="number">200</span>)</div><div class="line">  make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">&#125;</div><div class="line">    </div><div class="line">smallBox.backgroundColor = <span class="type">UIColor</span>.yellow</div><div class="line">box.addSubview(smallBox)</div><div class="line">    </div><div class="line">smallBox.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  <span class="comment">// 相当于 make width = superview.width - 50, height = superview.height - 50</span></div><div class="line">  make.size.equalTo(box).offset(-<span class="number">50</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-倍率修正：multipliedBy"><a href="#3-倍率修正：multipliedBy" class="headerlink" title="3.倍率修正：multipliedBy"></a>3.倍率修正：multipliedBy</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line"><span class="keyword">super</span>.viewDidLoad()</div><div class="line">    </div><div class="line">box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line"><span class="keyword">self</span>.view.addSubview(box)</div><div class="line">    </div><div class="line">box.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.width.height.equalTo(<span class="number">200</span>)</div><div class="line">  make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">&#125;</div><div class="line">    </div><div class="line">smallBox.backgroundColor = <span class="type">UIColor</span>.yellow</div><div class="line">box.addSubview(smallBox)</div><div class="line">    </div><div class="line">smallBox.snp.makeConstraints &#123; (make) <span class="keyword">in</span></div><div class="line">  make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  <span class="comment">// 相当于 make width = superview.width / 2, height = superview.height / 2</span></div><div class="line">  make.size.equalTo(box).multipliedBy(<span class="number">0.5</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Snapkit约束的更新、移除、重做"><a href="#Snapkit约束的更新、移除、重做" class="headerlink" title="Snapkit约束的更新、移除、重做"></a>Snapkit约束的更新、移除、重做</h2><h3 id="删除约束"><a href="#删除约束" class="headerlink" title="删除约束"></a>删除约束</h3><p>要实现对现有的约束进行更新或者移除，我们需要先将约束的结果赋值给一个局部变量或一个类属性，然后对这个约束的引用进行操作。</p>
<p>比如下面样例：开始时我们给橙色方块添加宽高150约束，以及页面居中约束，点击按钮后使用 <code>deactivate()</code> 方法把这尺寸约束给移除，方块消失（长宽变成0,0）</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line"></div><div class="line"><span class="comment">//保存约束的引用</span></div><div class="line"><span class="keyword">var</span> sizeConstraint:<span class="type">Constraint</span>?</div><div class="line"></div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">super</span>.viewDidLoad()</div><div class="line"> </div><div class="line">  box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">  <span class="keyword">self</span>.view.addSubview(box)</div><div class="line"> </div><div class="line">  box.snp.makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    <span class="keyword">self</span>.sizeConstraint = make.width.height.equalTo(<span class="number">150</span>).constraint</div><div class="line">    make.center.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">//按钮点击</span></div><div class="line">  <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">btnTouch</span><span class="params">(<span class="number">_</span> sender: AnyObject)</span></span> &#123;</div><div class="line">    <span class="comment">//移除约束</span></div><div class="line">    <span class="keyword">self</span>.sizeConstraint?.deactivate()</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="通过约束的引用来更新约束"><a href="#通过约束的引用来更新约束" class="headerlink" title="通过约束的引用来更新约束"></a>通过约束的引用来更新约束</h3><p>还是以上面距屏幕上方40像素的约束为例，点击按钮后，通过调用约束引用的 <code>update(offset:)</code> 方法把距离修改成60像素。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line">     </div><div class="line"><span class="comment">//保存约束的引用</span></div><div class="line"><span class="keyword">var</span> topConstraint:<span class="type">Constraint</span>?</div><div class="line"> </div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">super</span>.viewDidLoad()</div><div class="line"> </div><div class="line">  box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">  <span class="keyword">self</span>.view.addSubview(box)</div><div class="line"> </div><div class="line">  box.snp.makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.width.height.equalTo(<span class="number">150</span>)</div><div class="line">    make.centerX.equalTo(<span class="keyword">self</span>.view)</div><div class="line">    <span class="keyword">self</span>.topConstraint = make.top.equalTo(<span class="keyword">self</span>.view).offset(<span class="number">40</span>).constraint</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//按钮点击</span></div><div class="line"><span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">btnTouch</span><span class="params">(<span class="number">_</span> sender: AnyObject)</span></span> &#123;</div><div class="line">  <span class="comment">//更新修改约束</span></div><div class="line">  <span class="keyword">self</span>.topConstraint?.update(offset: <span class="number">60</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用snp-updateConstraints更新约束"><a href="#使用snp-updateConstraints更新约束" class="headerlink" title="使用snp.updateConstraints更新约束"></a>使用snp.updateConstraints更新约束</h3><p>我们还可以用 <strong>snp.updateConstraints</strong> 方法来代替 <strong>snp.makeConstraints</strong> 进行约束的更新，这个更新操作通常放在 <strong>UIViewController</strong> 的 <strong>updateViewConstraints()</strong> 方法中，或者 <strong>UIView</strong> 的 <strong>updateConstraints()</strong> 方法中执行，这样视图约束需要更新的时候会自动调用。</p>
<p>比如下面样例，我们使用 <strong>snp.updateConstraints()</strong> 方法设置橙色视图的宽度约束为与屏幕等宽，这样不管设备如何旋转，视图都回自动更新约束撑满屏幕。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line"></div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">super</span>.viewDidLoad()</div><div class="line">     </div><div class="line">  box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">  <span class="keyword">self</span>.view.addSubview(box)</div><div class="line">     </div><div class="line">  box.snp.makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.width.equalTo(<span class="keyword">self</span>.view)</div><div class="line">    make.height.equalTo(<span class="number">150</span>)</div><div class="line">    make.centerX.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//视图约束更新</span></div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">updateViewConstraints</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">self</span>.box.snp.updateConstraints&#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    <span class="comment">//视图宽度与屏幕等宽</span></div><div class="line">    make.width.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  &#125;</div><div class="line">     </div><div class="line">  <span class="keyword">super</span>.updateViewConstraints()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用snp-remakeConstraints重做约束"><a href="#使用snp-remakeConstraints重做约束" class="headerlink" title="使用snp.remakeConstraints重做约束"></a>使用snp.remakeConstraints重做约束</h3><p><strong>snp.remakeConstraints</strong> 与 <strong>snp.makeConstraints</strong> 用法类似，不同的是 <strong>snp.remakeConstraints</strong> 首先会先 <strong><em>清除掉</em></strong> 之前所有被SnapKit设置的约束。</p>
<p>下面样例：初始化时橙色视图约束是宽高150，水平居中。点击按钮后重做约束，宽高变100，且不再居中。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">lazy</span> <span class="keyword">var</span> box = <span class="type">UIView</span>()</div><div class="line"></div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">super</span>.viewDidLoad()</div><div class="line">     </div><div class="line">  box.backgroundColor = <span class="type">UIColor</span>.orange</div><div class="line">  <span class="keyword">self</span>.view.addSubview(box)</div><div class="line">     </div><div class="line">  box.snp.makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.width.height.equalTo(<span class="number">150</span>)</div><div class="line">    make.centerX.equalTo(<span class="keyword">self</span>.view)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//按钮点击</span></div><div class="line"><span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">btnTouch</span><span class="params">(<span class="number">_</span> sender: AnyObject)</span></span> &#123;</div><div class="line">  <span class="comment">//重做约束</span></div><div class="line">  box.snp.remakeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.width.height.equalTo(<span class="number">100</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="SnapKit约束优先级，约束做动画"><a href="#SnapKit约束优先级，约束做动画" class="headerlink" title="SnapKit约束优先级，约束做动画"></a>SnapKit约束优先级，约束做动画</h2><h3 id="约束优先级"><a href="#约束优先级" class="headerlink" title="约束优先级"></a>约束优先级</h3><h4 id="1-优先级设置"><a href="#1-优先级设置" class="headerlink" title="1.优先级设置"></a>1.优先级设置</h4><ul>
<li>通过 <strong>priority()</strong> 方法我们可以设置任意的优先级，接受的参数是0-1000的数字。比如：priority(600)。 </li>
<li>如果不设置的话，<strong>默认</strong>的优先级是1000。 </li>
</ul>
<h4 id="2-使用优先级的样例"><a href="#2-使用优先级的样例" class="headerlink" title="2.使用优先级的样例"></a>2.使用优先级的样例</h4><p>如有疏漏或错误欢迎指正~</p>
<blockquote>
<p>###参考资料：<br>Swift - 自动布局库SnapKit的使用详解: <a href="http://www.hangge.com/blog/cache/detail_1097.html" target="_blank" rel="external">http://www.hangge.com/blog/cache/detail_1097.html</a></p>
</blockquote>
<hr>
<p>发布时间: 2017-08-11 18:12:52</p>
<p>原始链接: <a href="http://blog.lbinin.com/2017/08/11/Swift%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E5%BA%93SnapKit%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/" target="_blank" rel="external">Swift自动布局库SnapKit使用介绍</a></p>
<p>许可协议: <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="external">署名-非商业性使用-禁止演绎 4.0 国际</a> 转载请保留原文链接及作者。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SnapKit介绍&quot;&gt;&lt;a href=&quot;#SnapKit介绍&quot; class=&quot;headerlink&quot; title=&quot;SnapKit介绍&quot;&gt;&lt;/a&gt;SnapKit介绍&lt;/h2&gt;&lt;p&gt;SnapKit是一个优秀的第三方自适应布局库，它可以让iOS、OS X应用更简单地实
    
    </summary>
    
      <category term="Swift" scheme="http://www.lbinin.com/categories/Swift/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac百度网盘（网页版）破解突破下载速度限制</title>
    <link href="http://www.lbinin.com/2017/07/09/Mac%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%EF%BC%88%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%89%E7%A0%B4%E8%A7%A3%E7%AA%81%E7%A0%B4%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E9%99%90%E5%88%B6/"/>
    <id>http://www.lbinin.com/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/</id>
    <published>2017-07-09T14:55:58.000Z</published>
    <updated>2017-07-11T02:21:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol>
<li>Mac下载神器: Aria2</li>
<li>Chrome浏览器（供安装插件使用）</li>
</ol>
<p>下载地址：<a href="http://software.lbinin.com/aira2/aria2+chrome.dmg" target="_blank" rel="external">http://software.lbinin.com/aira2/aria2+chrome.dmg</a></p>
<hr>
<h2 id="Aria2特性"><a href="#Aria2特性" class="headerlink" title="Aria2特性"></a>Aria2特性</h2><ul>
<li>支持多协议：HTTP/HTTPS，FTP，SFTP，BitTorrent和Metalink。</li>
<li>多线程连线：aria2会自动从多个线程下载文件，并充分利用你的带宽。</li>
<li>轻量：运行时不会占用过多资源。根据官方介绍，内存占用通常在 4MB~9MB，使用BitTorrent 协议，下行速度2.8MB/s时 CPU占用率约6%。</li>
<li>全功能BitTorrent客户端，可以当BT客户端使用，抛弃迅雷。</li>
<li>支持RPC界面远程控制。</li>
</ul>
<hr>
<h2 id="Aria2安装"><a href="#Aria2安装" class="headerlink" title="Aria2安装"></a>Aria2安装</h2><ol>
<li><p>下载上方 <strong><code>aria2+chrome.dmg</code></strong></p>
</li>
<li><p>建议将文件放到桌面的新建文件夹如 <code>桌面\百度网盘</code>，方便日后使用</p>
</li>
<li><p>将dmg文件内 <strong><code>Aria2GUI</code></strong> 和 <strong><code>BaiduExporter-master</code></strong> 文件复制到文件夹内</p>
</li>
<li><p>打开Chrome浏览器，打开 <code>更多工具 &gt; 扩展程序</code><br> <img src="/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/3.png" alt="扩展程序"></p>
</li>
<li><p>选中 <code>开发者模式</code>，点击 <code>加载已解压的扩展程序</code>，选择刚刚提取出来的<strong>BaiduExporter-master</strong>下的 <code>chrome</code> 文件夹 <strong>或者</strong> 将 <code>chrome</code> 文件夹直接拖入 <code>扩展程序</code> 页面以安装插件。</p>
<p> <img src="/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/4.png" alt="加载已解压的扩展程序"></p>
</li>
<li><p>安装好后显示 <code>网盘助手</code><br> <img src="/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/5.png" alt="网盘助手"></p>
</li>
<li><p>重启浏览器</p>
</li>
<li><p>建议将 <strong><code>Aria2GUI</code></strong> 程序锁定在Dock栏中方便使用。</p>
</li>
</ol>
<hr>
<h2 id="Aria2使用方法"><a href="#Aria2使用方法" class="headerlink" title="Aria2使用方法"></a>Aria2使用方法</h2><ol>
<li><p>登录百度网盘网页版：<a href="https://pan.baidu.com" target="_blank" rel="external">https://pan.baidu.com</a></p>
</li>
<li><p>启动 <strong><code>Aria2GUI</code></strong> 应用程序</p>
</li>
<li><p>选中你要下载的文件或者文件夹</p>
</li>
<li><p>鼠标移至上方的 <strong><code>导出下载</code></strong>，这时候出现了一个 <strong><code>AIRA2 RPC</code></strong>，点击下载</p>
</li>
<li><p>OK，任务已经添加到 Aira2 中啦，可以看到速度比起百度网盘下载快多了~<br> <img src="/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/1.png" alt="下载界面1"></p>
 <center>总下载速度已经到了 12MB/s （开启任务上限为20，网络环境：校园网）</center>

<p> <img src="/2017/07/09/Mac百度网盘（网页版）破解突破下载速度限制/2.png" alt="下载界面2"></p>
 <center>万恶的百度云~</center>

</li>
</ol>
<p>发布时间: 2017-07-09 22:55:58</p>
<p>原始链接: <a href="http://blog.lbinin.com/2017/07/09/Mac%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%EF%BC%88%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%89%E7%A0%B4%E8%A7%A3%E7%AA%81%E7%A0%B4%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E9%99%90%E5%88%B6/" target="_blank" rel="external">Mac百度网盘（网页版）破解突破下载速度限制</a></p>
<p>许可协议: <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="external">署名-非商业性使用-禁止演绎 4.0 国际</a> 转载请保留原文链接及作者。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Mac下载神器: Aria2&lt;/li&gt;
&lt;li&gt;Chrome浏览器（供安装插件使用）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下载地址：&lt;a
    
    </summary>
    
      <category term="Mac" scheme="http://www.lbinin.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下CocoaPods安装和使用教程</title>
    <link href="http://www.lbinin.com/2017/07/02/Mac%E4%B8%8B%E5%AE%89%E8%A3%85CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://www.lbinin.com/2017/07/02/Mac下安装CocoaPods安装和使用教程/</id>
    <published>2017-07-02T02:13:53.000Z</published>
    <updated>2017-08-11T10:19:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是CocoaPods"><a href="#什么是CocoaPods" class="headerlink" title="什么是CocoaPods"></a>什么是CocoaPods</h2><blockquote>
<p>当你开发iOS应用时，会经常使用到很多第三方开源类库，比如JSONKit，AFNetWorking等等。可能某个类库又用到其他类库，所以要使用它，必须得另外下载其他类库。手动下载所需类库十分麻烦。另外一种常见情况是，你项目中用到的类库有更新，你必须得重新下载新版本，重新加入到项目中，十分麻烦。所以，你需要 CocoaPods来帮你解决这些恼人的问题。</p>
</blockquote>
<h2 id="安装CocoaPods"><a href="#安装CocoaPods" class="headerlink" title="安装CocoaPods"></a>安装CocoaPods</h2><p>打开 <strong>Terminal</strong>，然后按照以下提示操作即可：</p>
<h3 id="1-设置ruby的软件源"><a href="#1-设置ruby的软件源" class="headerlink" title="1. 设置ruby的软件源"></a>1. 设置ruby的软件源</h3><p>至于如何安装ruby自行百度~</p>
<p>因为ruby的软件源 <strong>rubygems.org</strong> 因为使用亚马逊的云服务被天朝屏蔽啦，这里我们更新一下ruby的源。</p>
<p>国内ruby源地址：<a href="https://gems.ruby-china.org/" target="_blank" rel="external">RubyGems 镜像- Ruby China</a></p>
<p>建议gem版本2.6以上</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ gem update --system <span class="comment"># 这里需要翻墙给信翻墙一下</span></div><div class="line">$ gem -v              <span class="comment"># 查看版本</span></div></pre></td></tr></table></figure>
<p>更新ruby源</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ gem sources <span class="_">-l</span>                                 <span class="comment">#(查看当前ruby的源)</span></div><div class="line">$ gem sources --remove https://rubygems.org/     <span class="comment"># 移除当前ruby的源</span></div><div class="line">$ gem sources --add https://gems.ruby-china.org/ <span class="comment"># 设置当前ruby的源为国内的</span></div><div class="line">$ gem sources <span class="_">-l</span>                                 <span class="comment"># 请确保其下只有 gems.ruby-china.org</span></div></pre></td></tr></table></figure>
<h3 id="2-安装Cocoapods"><a href="#2-安装Cocoapods" class="headerlink" title="2. 安装Cocoapods"></a>2. 安装Cocoapods</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gem install cocoapods <span class="comment"># 安装Cocoapods</span></div></pre></td></tr></table></figure>
<p>如果报以下错误：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ERROR:  While executing gem ... (Errno::EPERM)</div><div class="line">Operation not permitted - /usr/bin/xcodeproj</div></pre></td></tr></table></figure>
<p>解决方案：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo gem install -n /usr/<span class="built_in">local</span>/bin cocoapods</div><div class="line">pod setup</div></pre></td></tr></table></figure>
<p>pod setup在执行时，会输出Setting up CocoaPods master repo，但是会等待比较久的时间。这步其实是 Cocoapods 在将它的信息下载到 ~/.cocoapods目录下，如果你等太久，可以试着 cd 到那个目录，用du -sh *来查看下载进度。</p>
<h2 id="CocoaPods使用方法"><a href="#CocoaPods使用方法" class="headerlink" title="CocoaPods使用方法"></a>CocoaPods使用方法</h2><ol>
<li><p>在 <code>*.xcodeproj</code> 的同级目录下，创建 <code>Podfile</code> 的无后缀文件，在其中写入</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">use_frameworks!</div><div class="line"></div><div class="line">target &apos;项目名称&apos; do</div><div class="line">	pod &apos;模块名称&apos;</div><div class="line">	pod &apos;模块名称&apos;</div><div class="line">	pod &apos;模块名称&apos;</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>打开 <code>terminal</code> 中进入到项目的目录</p>
</li>
<li><p>使用 <code>pod install</code> 命令安装所需模块和依赖</p>
</li>
<li><p>安装好后打开项目所在文件夹，可以看到名为 <code>*.xcworkspace</code> 的工程文件，打开就可以在项目中看到名为 <code>Pods</code> 的target了</p>
</li>
<li><p>之后可以使用相关模块的API了</p>
</li>
</ol>
<hr>
<blockquote>
<p>###参考资料：<br><a href="https://devlong.com/2017/03/12/pod-setup-wait-too-long-time/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">pod setup命令失败解决方法</a> <em>——作者：Mellong</em></p>
<p><a href="http://www.jianshu.com/p/b64b4fd08d3c" target="_blank" rel="external">最新 macOS Sierra 10.12.3 安装CocoaPods及使用详解</a> <em>——作者：这小小的葡萄我还从来没吃过</em></p>
</blockquote>
<p>发布时间: 2017-07-02 10:13:53</p>
<p>原始链接: <a href="http://blog.lbinin.com/2017/07/02/Mac%E4%B8%8B%E5%AE%89%E8%A3%85CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="external">Mac下CocoaPods安装和使用教程</a></p>
<p>许可协议: <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="external">署名-非商业性使用-禁止演绎 4.0 国际</a> 转载请保留原文链接及作者。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是CocoaPods&quot;&gt;&lt;a href=&quot;#什么是CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;什么是CocoaPods&quot;&gt;&lt;/a&gt;什么是CocoaPods&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;当你开发iOS应用时，会经常使用到
    
    </summary>
    
      <category term="Mac" scheme="http://www.lbinin.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>遗传算法解决函数最大值问题</title>
    <link href="http://www.lbinin.com/2017/06/07/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E8%A7%A3%E5%86%B3%E5%87%BD%E6%95%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E9%97%AE%E9%A2%98/"/>
    <id>http://www.lbinin.com/2017/06/07/遗传算法解决函数最大值问题/</id>
    <published>2017-06-07T02:09:26.000Z</published>
    <updated>2017-06-07T02:13:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js版本："><a href="#js版本：" class="headerlink" title="js版本："></a>js版本：</h3><p>相应注释已经写上，具体分析等考完试再写-=-</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> setting = &#123;</div><div class="line">    <span class="attr">length</span>     : <span class="number">8</span>,   <span class="comment">// 染色体长度</span></div><div class="line">    count      : <span class="number">200</span>, <span class="comment">// 随机生成初始种群中的染色体数量</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> population = gen_population(setting.length, setting.count) <span class="comment">// 随机生成初始种群</span></div><div class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 200次进化迭代</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</div><div class="line">        evolve()</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 输出结果</span></div><div class="line">    <span class="keyword">let</span> rst = result()</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`</span></div><div class="line">函数f(x)=xcosx的最优解为：<span class="subst">$&#123;rst&#125;</span></div><div class="line">所取到的最大值为：<span class="subst">$&#123;rst * <span class="built_in">Math</span>.cos(rst)&#125;</span></div><div class="line">    `)</div><div class="line">&#125;)()</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 进化，对当前一代种群依次进行选择、交叉并生成新一代种群，然后对新一代种群进行变异</div><div class="line">* @param  &#123;Number&#125; param</div><div class="line">* @return &#123;String&#125; return</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">evolve</span>(<span class="params">retain_rate = <span class="number">0.2</span>, random_select_rate = <span class="number">0.6</span>, mutation_rate = <span class="number">0.01</span></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> parents = selection(retain_rate, random_select_rate)</div><div class="line">    crossover(parents)</div><div class="line">    mutation(mutation_rate)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 随机生成长度为length的染色体，每个基因的取值是0或1，这里用一个bit表示一个基因</div><div class="line">* @param  &#123;Number&#125; length 随机生成长度为length的染色体</div><div class="line">* @return &#123;String&#125; return 长度为length的染色体</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen_chromosome</span>(<span class="params">length</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> chromosome = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= length; i++) </div><div class="line">        chromosome |= (<span class="number">1</span> &lt;&lt; i) * <span class="built_in">Math</span>.random()</div><div class="line">    <span class="keyword">return</span> chromosome</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 获取初始种群（一个含有count个长度为length的染色体的列表）</div><div class="line">* @param  &#123;Number&#125; length 长度为length的染色体</div><div class="line">* @param  &#123;Number&#125; count个染色体</div><div class="line">* @return &#123;String&#125; return 染色体数组</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen_population</span>(<span class="params">length, count</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> population_array = []</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++)</div><div class="line">        population_array.push(gen_chromosome(length))</div><div class="line">    <span class="keyword">return</span> population_array</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 计算适应值函数(也是我们需要求解的函数)</div><div class="line">* @param  &#123;Number&#125; x 自变量</div><div class="line">* @return &#123;String&#125; 因变量</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fitness</span>(<span class="params">chromosome</span>)</span>&#123;</div><div class="line">    <span class="comment">// 因为是求最大值，所以数值越大，适应度越高</span></div><div class="line">    <span class="keyword">let</span> x = decode(chromosome)</div><div class="line">    <span class="keyword">return</span> x * <span class="built_in">Math</span>.cos(x)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 染色体选择</div><div class="line">* @param  &#123;Number&#125; param</div><div class="line">* @return &#123;String&#125; return </div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">selection</span>(<span class="params">retain_rate, random_select_rate</span>) </span>&#123;</div><div class="line">    <span class="comment">// 先对适应度从大到小排序，选出存活的染色体</span></div><div class="line">    <span class="keyword">let</span> graded = []</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> population) &#123;</div><div class="line">        graded.push(&#123;</div><div class="line">            <span class="attr">fitness</span>: fitness(i),</div><div class="line">            <span class="attr">chromosome</span>: i</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">    graded.sort( <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;<span class="keyword">return</span> b.fitness - a.fitness&#125; )</div><div class="line">    <span class="comment">// for (let i)</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;graded.length; i++) &#123;</div><div class="line">        graded[i] = graded[i].chromosome</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 选出适应性强的染色体</span></div><div class="line">    <span class="keyword">let</span> retain_length = <span class="built_in">Math</span>.floor(graded.length * retain_rate)</div><div class="line">    <span class="keyword">let</span> parents = graded.slice( <span class="number">0</span>, retain_length )</div><div class="line"></div><div class="line">    <span class="comment">// 选出适应性不强，但是幸存的染色体</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> graded.slice( retain_length, graded.length )) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.random() &lt; random_select_rate) &#123;</div><div class="line">            parents.push(i)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> parents</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 染色体的交叉、繁殖，生成新一代的种群</div><div class="line">* @param  &#123;Number&#125; parents 父代</div><div class="line">* @return &#123;String&#125; return</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">crossover</span>(<span class="params">parents</span>) </span>&#123;</div><div class="line">    <span class="comment">// 新出生的孩子，最终会被加入存活下来的父母之中，形成新一代的种群。</span></div><div class="line">    <span class="keyword">let</span> children = []</div><div class="line">    <span class="comment">// 需要繁殖的孩子的量</span></div><div class="line">    <span class="keyword">let</span> children_num = population.length - parents.length</div><div class="line">    <span class="comment">// 开始根据需要的量进行繁殖</span></div><div class="line">    <span class="keyword">while</span> (children.length &lt; children_num) &#123;</div><div class="line">        <span class="keyword">let</span> male = <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * (parents.length - <span class="number">1</span>) )</div><div class="line">        <span class="keyword">let</span> female = <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * (parents.length - <span class="number">1</span>) )</div><div class="line">        <span class="keyword">if</span> (male != female) &#123;</div><div class="line">            <span class="comment">// 随机选取交叉点</span></div><div class="line">            <span class="keyword">let</span> cross_pos = <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * setting.length )</div><div class="line">            <span class="comment">// 生成掩码，方便位操作</span></div><div class="line">            <span class="keyword">let</span> mask = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; cross_pos; i++) &#123;</div><div class="line">                mask |= (<span class="number">1</span> &lt;&lt; i)</div><div class="line">            &#125;</div><div class="line">            male = parents[male]</div><div class="line">            female = parents[female]</div><div class="line">            <span class="comment">// 孩子将获得父亲在交叉点前的基因和母亲在交叉点后（包括交叉点）的基因</span></div><div class="line">            <span class="keyword">let</span> child = ((male &amp; mask) | (female &amp; ~mask)) &amp; ((<span class="number">1</span> &lt;&lt; setting.length) - <span class="number">1</span>)</div><div class="line">            children.push(child)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    population = parents.concat(children)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 变异，对种群中的所有个体，随机改变某个个体中的某个基因</div><div class="line">* @param  &#123;Number&#125; param</div><div class="line">* @return &#123;String&#125; return</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mutation</span>(<span class="params">rate</span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; population.length; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.random() &lt; rate) &#123;</div><div class="line">            <span class="keyword">let</span> j = <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * (setting.length - <span class="number">1</span>) )</div><div class="line">            population[i] ^= <span class="number">1</span> &lt;&lt; j</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 解码染色体，将二进制转化为属于[0, pi/4]的实数</div><div class="line"> * @param  &#123;Number&#125; chromosome</div><div class="line"> * @return &#123;String&#125; 属于[0, pi/4]的实数</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span>(<span class="params">chromosome</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> chromosome * (<span class="built_in">Math</span>.PI / <span class="number">4</span>) / (<span class="number">2</span> ** setting.length - <span class="number">1</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 获得当前代的最优值，这里取的是函数取最大值时x的值。</div><div class="line">* @param  &#123;Number&#125; param</div><div class="line">* @return &#123;String&#125; return</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">result</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> graded = []</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> population) &#123;</div><div class="line">        graded.push(&#123;</div><div class="line">            <span class="attr">fitness</span>: fitness(i),</div><div class="line">            <span class="attr">chromosome</span>: i</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">    graded.sort( <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;<span class="keyword">return</span> b.fitness - a.fitness&#125; )</div><div class="line">    <span class="comment">// for (let i)</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;graded.length; i++) &#123;</div><div class="line">        graded[i] = graded[i].chromosome</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> decode(graded[<span class="number">0</span>])</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;js版本：&quot;&gt;&lt;a href=&quot;#js版本：&quot; class=&quot;headerlink&quot; title=&quot;js版本：&quot;&gt;&lt;/a&gt;js版本：&lt;/h3&gt;&lt;p&gt;相应注释已经写上，具体分析等考完试再写-=-&lt;/p&gt;
    
    </summary>
    
      <category term="人工智能基础" scheme="http://www.lbinin.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>关于will-change的用法以及一些web动画渲染优化</title>
    <link href="http://www.lbinin.com/2017/05/03/%E5%85%B3%E4%BA%8Ewill-change%E7%9A%84%E7%94%A8%E6%B3%95%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9Bweb%E5%8A%A8%E7%94%BB%E6%B8%B2%E6%9F%93%E4%BC%98%E5%8C%96/"/>
    <id>http://www.lbinin.com/2017/05/03/关于will-change的用法以及一些web动画渲染优化/</id>
    <published>2017-05-03T08:31:19.000Z</published>
    <updated>2017-05-04T08:47:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前在研究一个有关 <a href="/2017/05/03/利用纯css完成感知悬停/">利用纯css完成感知悬停</a> 的代码，在里面第一次见到了 <code>will-change</code> 属性（学识疏浅勿喷-=-），查资料看了一下张鑫旭大大的博客 <a href="http://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/" target="_blank" rel="external">使用CSS3 will-change提高页面滚动、动画等渲染性能</a> 对这个属性肃然起敬（相遇恨晚，抱头痛哭.jpg）。</p>
<a id="more"></a>
<p>MDN上显示该属性语法如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 关键字值 */</span></div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">auto</span>;</div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">scroll-position</span>;</div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">contents</span>;</div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">transform</span>;        <span class="comment">/* &lt;custom-ident&gt;示例 */</span></div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">opacity</span>;          <span class="comment">/* &lt;custom-ident&gt;示例 */</span></div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">left</span>, <span class="selector-tag">top</span>;        <span class="comment">/* 两个&lt;animateable-feature&gt;示例 */</span></div><div class="line"></div><div class="line"><span class="comment">/* 全局值 */</span></div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">inherit</span>;</div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">initial</span>;</div><div class="line"><span class="selector-tag">will-change</span>: <span class="selector-tag">unset</span>;</div></pre></td></tr></table></figure>
<h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><p>当我们通过某些行为（点击、移动或滚动）触发页面进行大面积绘制的时候，浏览器往往是没有准备的，只能被动使用CPU去计算与重绘，由于没有事先准备，应付渲染够呛，于是掉帧。<code>will-change</code> 是在行为触发之前告诉浏览器我们要进行一些什么样的变化操作，让浏览器好有个准备，启动GPU为你渲染动画。</p>
<ul>
<li>CPU即中央处理器，它的功能主要是解释计算机指令以及处理计算机软件中的数据,也被称为主板。<br>GPU即图形处理器，是与处理和绘制图形相关的硬件。</li>
<li>GPU是专为执行复杂的数学和几何计算而设计的，有了它，CPU就从图形处理的任务中解放出来，可以执行其他更多的系统任务。</li>
<li>硬件加速是指在计算机中透过把计算量非常大的工作分配给专门的硬件来处理来减轻CPU的工作量的技术。在CSS transition, transform和animation的世界里，他暗示我们应该卸载进程到GPU，因此加快速度。这种情况通过向它自己的层叠加元素，当加载动画的时候可以加速渲染。</li>
</ul>
<p><code>will-change</code> 是怎样改善动画的性能和质量？</p>
<p><strong>首先</strong>，在基于webkit的浏览器，我们在执行一些CSS的操作经常会看见闪烁，即二维变换和动画。在过去，我们通过欺骗浏览器一点点解决实现。我们会使浏览器执行3D变换，因此减轻了工作量到GPU上。当我们正确使用的时候，will-change属性将极大的帮助我们。</p>
<hr>
<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>值得注意的一点，这个 <code>will-change</code> 应该在动画开始前的css语句块中执行，比如：</p>
<h4 id="错误示例"><a href="#错误示例" class="headerlink" title="错误示例"></a>错误示例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.will-change</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">	<span class="attribute">will-change</span>: transform;</div><div class="line">	<span class="attribute">transition</span>: transform <span class="number">0.3s</span>;</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">scale</span>(1.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<div class="tip"><br>    <strong>原因</strong>：当我们通知浏览器的时候，变化已经发生，完全抵消了will-change的全部意义。当预期的改变发生时，如果我们想要让浏览器提前了解，我们就必须在合适的时间通知它。 为了使元素达到激活的状态，它必须先被hover。<br></div>

<h4 id="正确示例"><a href="#正确示例" class="headerlink" title="正确示例"></a>正确示例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.will-change</span> &#123;</div><div class="line">	<span class="attribute">transition</span>: transform <span class="number">0.3s</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.will-change</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">	<span class="attribute">will-change</span>: transform;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.will-change</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">scale</span>(1.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<div class="tip"><br>不要直接写在默认状态中，因为will-change会一直挂着，如：<br></div>

<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.will-change</span> &#123;</div><div class="line">  <span class="attribute">will-change</span>: transform;</div><div class="line">  <span class="attribute">transition</span>: transform <span class="number">0.3s</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.will-change</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(1.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以让父元素hover的时候，声明will-change，这样，移出的时候就会自动remove，触发的范围基本上是有效元素范围。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.will-change-parent</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.will-change</span> &#123;</div><div class="line">  <span class="attribute">will-change</span>: transform;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.will-change</span> &#123;</div><div class="line">  <span class="attribute">transition</span>: transform <span class="number">0.3s</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.will-change</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(1.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p>最后说一点，如果js想添加/删除will-change属性，应该按照如下操作：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dom.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    target.style.willChange = <span class="string">'transform'</span>;</div><div class="line">&#125;;</div><div class="line">dom.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// target动画哔哩哔哩...</span></div><div class="line">&#125;;</div><div class="line">target.onanimationend = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 动画结束回调，移除will-change</span></div><div class="line">    <span class="keyword">this</span>.style.willChange = <span class="string">'auto'</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="动画性能简易优化"><a href="#动画性能简易优化" class="headerlink" title="动画性能简易优化"></a>动画性能简易优化</h2><ol>
<li>把 <code>background-attachment: fixed;</code> 换成 <code>position: fixed;</code>，因为前面的语句会在滚动的时候实时计算重绘。</li>
<li>背景图片所在的元素可以替换为 <code>::before</code> 伪元素。</li>
<li>使用CSS3的 <code>will-change</code> 属性启动GPU渲染。</li>
</ol>
<blockquote>
<p>实例引用来：<a href="http://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/" target="_blank" rel="external">使用CSS3 will-change提高页面滚动、动画等渲染性能</a></p>
<p>参考资料：<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/will-change" target="_blank" rel="external">will-change - CSS | MDN</a></p>
<p>参考资料：<a href="http://www.w3cplus.com/css3/introduction-css-will-change-property.html" target="_blank" rel="external">关于CSS的will-change属性的介绍</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在研究一个有关 &lt;a href=&quot;/2017/05/03/利用纯css完成感知悬停/&quot;&gt;利用纯css完成感知悬停&lt;/a&gt; 的代码，在里面第一次见到了 &lt;code&gt;will-change&lt;/code&gt; 属性（学识疏浅勿喷-=-），查资料看了一下张鑫旭大大的博客 &lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用CSS3 will-change提高页面滚动、动画等渲染性能&lt;/a&gt; 对这个属性肃然起敬（相遇恨晚，抱头痛哭.jpg）。&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://www.lbinin.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>利用纯css完成感知悬停</title>
    <link href="http://www.lbinin.com/2017/05/03/%E5%88%A9%E7%94%A8%E7%BA%AFcss%E5%AE%8C%E6%88%90%E6%84%9F%E7%9F%A5%E6%82%AC%E5%81%9C/"/>
    <id>http://www.lbinin.com/2017/05/03/利用纯css完成感知悬停/</id>
    <published>2017-05-03T05:03:01.000Z</published>
    <updated>2017-05-03T08:41:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看见了一个利用纯css制作的感知悬停，<a href="http://www.jq22.com/code/20170307233848.html" target="_blank" rel="external">示例页面</a> 做出了和百度图片一样的悬停效果，而且跟吸引我的是用的是纯css，虽然我不知道百度图片用的是什么方法，但是对于一个 <strong><code>能用css就别用js</code></strong>主义者的我当然是引起了极大的兴趣~</p>
<p><img src="/2017/05/03/利用纯css完成感知悬停/temple.gif" alt="演示动画"></p>
<center><small>效果图</small></center>

<p>话不多说先看看页面的源码去分析一下~</p>
<a id="more"></a>
<hr>
<h2 id="HTML结构"><a href="#HTML结构" class="headerlink" title="HTML结构"></a>HTML结构</h2><p>在看css之前先和大家说说这个页面的HTML结构吧</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"photo-container"</span> <span class="attr">style</span>=<span class="string">"background-image:url(https://source.unsplash.com/600x250/?sig=241)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Image 241 <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Quam molestiae ipsa sapiente mollitia, nobis.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"photo-container"</span> <span class="attr">style</span>=<span class="string">"background-image:url(https://source.unsplash.com/600x250/?sig=203)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Image 203 <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Autem possimus perspiciatis, eaque quos repudiandae modi labore sed repellat dolorum magnam praesentium expedita esse tempore saepe nulla.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"photo-container"</span> <span class="attr">style</span>=<span class="string">"background-image:url(https://source.unsplash.com/600x250/?sig=17)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Image 17 <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>一个 <code>row</code> 代表了一行，该行下面的每一块图片区域都是一个 <code>col</code> ，每个 <code>col</code> 下有图片的div容器 <code>photo-container</code> 以及hover后的提示块 <code>slide</code> ，以此累加 <code>col</code> ，这些元素的样式我们就不需要去分析他们了看我们项目的需求而定，我们要解开的是 <code>slide</code> 的面纱。</p>
<hr>
<h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><p>既然说的是利用的纯css实现的效果那我们现在就去看看它的css部分</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* The magic */</span></div><div class="line"><span class="selector-class">.col</span> &#123;</div><div class="line">  <span class="attribute">overflow</span>: hidden;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="comment">/* </span></div><div class="line">    Visibility delay gives the previously hovered element time to slide out before disappearing.</div><div class="line">    Remove the `visibility` transition to slide in current element without sliding out previous element</div><div class="line">  */</div><div class="line">  <span class="attribute">-webkit-transition</span>: all <span class="number">0.275s</span> ease-in-out, visibility <span class="number">0s</span> <span class="number">0.275s</span>;</div><div class="line">  <span class="attribute">transition</span>: all <span class="number">0.275s</span> ease-in-out, visibility <span class="number">0s</span> <span class="number">0.275s</span>;</div><div class="line">  <span class="attribute">visibility</span>: hidden;</div><div class="line">  <span class="attribute">will-change</span>: transform;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateY</span>(100%);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.row</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(-100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-100%);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateX</span>(100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(100%);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.col</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.col</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateX</span>(-100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-100%);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.col</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: none;</div><div class="line">          <span class="attribute">transform</span>: none;</div><div class="line">  <span class="attribute">visibility</span>: visible;</div><div class="line">  <span class="attribute">-webkit-transition-delay</span>: <span class="number">0s</span>;</div><div class="line">          <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以说作者真的是非常的贴心还写上了注释方便大家看懂这些代码</p>
<p>以一段 <code>The magic</code> 开头告诉我们作者要开始施展膜法了</p>
<p>这里详细介绍一些css内容希望如果有大神看到勿喷，只是希望自己记的详细一点。</p>
<p>首先这个 <code>col</code> 的区域要 <code>overflow: hidden;</code> 掉，来隐藏提示区域， <code>position: relative;</code> 不用说，就是给 <code>slide</code> 提供坐标参考。</p>
<p><code>slide</code> 的上右下左四个方向的坐标为0，指的是当 <code>position: absolute;</code> 的时候规定这个容器的四条边到父容器四条边的距离，加上不设置高度宽度，这个容器就被定义的高度和宽度，相当于设置了 <code>width: 100%; height: 100%;</code></p>
<p>接下来作者说了</p>
<blockquote>
<p>Visibility delay gives the previously hovered element time to slide out before disappearing.</p>
<p>给上一个hover的元素的 <code>visibility</code> 属性延时隐藏（既0.275s后隐藏，和其他动画的transition-duration一样），让它在消失前有滑出的动效。</p>
<p>Remove the <code>visibility</code> transition to slide in current element without sliding out previous element</p>
<p>在前一个元素的提示区域滑出，且当前元素被hover时去除其 <code>visibility</code> 的延时（既让它立即显示）。让用户看得到滑入动画效果。</p>
</blockquote>
<p>就是这个 <code>visibility</code> 的 <code>transition-delay</code> 让我们能够看到滑入和滑出的动效</p>
<p>接下来的 <code>will-change</code> 的作用是提高页面动画渲染效率，因为总是要改变所以把它放在了 <code>slide</code> 默认属性中，详见 <a href="/2017/05/03/关于will-change的用法以及一些web动画渲染优化/">关于will-change的用法以及一些web动画渲染优化</a> 。</p>
<p>最后的 <code>transform: translateY(100%);</code> 是 <code>slide</code> 的默认位置，既 <code>col</code> 的下方。</p>
<p>接下来的语句就是控制 <strong>提示区域位置</strong> 的规则啦</p>
<hr>
<h3 id="第一条规则"><a href="#第一条规则" class="headerlink" title="第一条规则"></a>第一条规则</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.row</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(-100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-100%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="语法解读："><a href="#语法解读：" class="headerlink" title="语法解读："></a>语法解读：</h4><p>当 <code>row</code> 被hover后，在当前 <code>row</code> 后的所有 <code>row</code> 下的所有提示区域 <code>slide</code> 都在父元素 <code>col</code> 的上方。</p>
<h4 id="语意解读："><a href="#语意解读：" class="headerlink" title="语意解读："></a>语意解读：</h4><p>第 <strong>X</strong> 行被 hover 后，后面的第 <strong>X+1</strong>，<strong>X+2</strong>，<strong>X+3</strong>，…，<strong>X+n</strong> 行下的所有<strong>提示区域</strong>都移动到<strong>内容区域</strong>的上方，这样，在鼠标往下移动的时候下一行的提示区域就可以从上方移动至中央出现。</p>
<hr>
<h3 id="第二条规则"><a href="#第二条规则" class="headerlink" title="第二条规则"></a>第二条规则</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateX</span>(100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(100%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="语法解读：-1"><a href="#语法解读：-1" class="headerlink" title="语法解读："></a>语法解读：</h4><p>当 <code>row</code> 被hover后，在当前 <code>row</code> 下的所有提示区域 <code>slide</code> 都在父元素 <code>col</code> 的右侧。</p>
<h4 id="语意解读：-1"><a href="#语意解读：-1" class="headerlink" title="语意解读："></a>语意解读：</h4><p>既第 <strong>X</strong> 行被 hover 后，这一行下的所有<strong>提示区域</strong>都移动到<strong>内容区域</strong>的右侧，为了鼠标从右侧移入内容区域的时候提示区域可以从内容区域的右侧移至中央出现。因为css只能选择某一元素之后的元素，不能选择该元素之前的元素，所以用了比第三条规则优先级更小的选择语句来设置被 hover 的 <code>col</code> <strong>之前</strong>的 <code>col</code> 下的提示区域 <code>slide</code> 的位置（既第三条规则选择不到的元素）</p>
<hr>
<h3 id="第三条规则"><a href="#第三条规则" class="headerlink" title="第三条规则"></a>第三条规则</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.col</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.col</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translateX</span>(-100%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-100%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="语法解读：-2"><a href="#语法解读：-2" class="headerlink" title="语法解读："></a>语法解读：</h4><p>当 <code>row</code> 被 hover 后，并且 <code>col</code> 被 hover 的条件下，在当前 <code>col</code> 之后的所有 <code>col</code> 的提示区域 <code>slide</code> 都在父元素 <code>col</code> 的左边。</p>
<h4 id="语意解读：-2"><a href="#语意解读：-2" class="headerlink" title="语意解读："></a>语意解读：</h4><p>因为这条优先级大于之前的第二条规则语句的优先级，故当某一个 <code>col</code> 被 hover 后，其<strong>之后</strong>的所有 <code>col</code> 都下的提示区域 <code>slide</code> 都会位于内容区域的左侧，以用来当鼠标从左侧移入内容区域的时候提示区域可以从内容区域的左侧移至中央出现</p>
<hr>
<h3 id="第四条规则"><a href="#第四条规则" class="headerlink" title="第四条规则"></a>第四条规则</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.col</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.slide</span> &#123;</div><div class="line">  <span class="attribute">-webkit-transform</span>: none;</div><div class="line">          <span class="attribute">transform</span>: none;</div><div class="line">  <span class="attribute">visibility</span>: visible;</div><div class="line">  <span class="attribute">-webkit-transition-delay</span>: <span class="number">0s</span>;</div><div class="line">          <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="解读："><a href="#解读：" class="headerlink" title="解读："></a>解读：</h4><p>当 <code>row</code> 被 hover 后，并且 <code>col</code> 被 hover 的条件下，当前的 <code>col</code> 回归原始位置，并且 <code>transition-delay:</code> 设置为0s用来立即显示元素。</p>
<hr>
<p>之后的CSS就是用来设置 <code>row</code> <code>col</code> <code>slide</code> 等元素的样式了，也就不详细解析了。</p>
<hr>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要利用了CSS伪元素 <code>:hover</code> 以及 <code>~</code> 选择器，根据 hover 的元素来进行提示区域 <code>slide</code> 位置的设置，个人认为比较核心的点除了位置控制，还有那一段 <code>visibility</code> 延时隐藏的语句，那是动画能否显示的核心，加上学习了 <code>will-change</code> 属性，收获颇多，希望能够用到自己的实践中去~</p>
<p>记录于2017-05-03 15:18</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看见了一个利用纯css制作的感知悬停，&lt;a href=&quot;http://www.jq22.com/code/20170307233848.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例页面&lt;/a&gt; 做出了和百度图片一样的悬停效果，而且跟吸引我的是用的是纯css，虽然我不知道百度图片用的是什么方法，但是对于一个 &lt;strong&gt;&lt;code&gt;能用css就别用js&lt;/code&gt;&lt;/strong&gt;主义者的我当然是引起了极大的兴趣~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2017/05/03/利用纯css完成感知悬停/temple.gif&quot; alt=&quot;演示动画&quot;&gt;&lt;/p&gt;
&lt;center&gt;&lt;small&gt;效果图&lt;/small&gt;&lt;/center&gt;

&lt;p&gt;话不多说先看看页面的源码去分析一下~&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://www.lbinin.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>论不同动画衔接之间的小技巧</title>
    <link href="http://www.lbinin.com/2017/05/02/%E8%AE%BA%E4%B8%8D%E5%90%8C%E5%8A%A8%E7%94%BB%E8%A1%94%E6%8E%A5%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.lbinin.com/2017/05/02/论不同动画衔接之间的小技巧/</id>
    <published>2017-05-02T09:08:03.000Z</published>
    <updated>2017-05-04T08:46:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起初"><a href="#起初" class="headerlink" title="起初"></a>起初</h2><p>今天在看到 <a href="http://www.jq22.com/code/20170412005647.html" target="_blank" rel="external">3D轨道分割图像</a> 这个示例的时候起初没有在意图片背后的悬浮动画，觉得这个只是加载了一张图片然后分成4块，hover上去的时候就合并在一起，就是4块图片的transition-delay不同，后来看着看着发现其实4块图片整体是有一个3D浮动的动画，而且当我hover上去的时候不管现在整体悬浮到那个位置都会顺滑的回到平面，勾起了我的好奇心。</p>
<p><img src="/2017/05/02/论不同动画衔接之间的小技巧/item0.png" alt="审查"></p>
<a id="more"></a>
<hr>
<h2 id="当初"><a href="#当初" class="headerlink" title="当初"></a>当初</h2><p>当初如果是要我做的话，我会给整体它一个 <code>infinite</code> 的 <code>animation</code> 给个5s的时间让他自己不断悬浮，然后hover上去的时候回到平面，不过这样做的一个非常大的弊端就是：</p>
<blockquote>
<p><strong>在hover上的那一瞬间，不管animation进行到哪一帧，都会立马回到最初的css</strong></p>
</blockquote>
<p>所以在这个animation和transition之间的衔接就会很突兀，以前也没有去细想，如今看到了之后发现这是我需要的东西。</p>
<hr>
<h2 id="审查"><a href="#审查" class="headerlink" title="审查"></a>审查</h2><p>刚开始检查类名为 <code>block__image</code> 的元素因为它装载了这4张图片，也是它进行的rotate3D，他有一条css引起了我的好奇</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">transition</span>: 5<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</div></pre></td></tr></table></figure>
<p>起初我还在好奇怎么用的不是animation，后来它的style亮了一下发生了改变，内容变为 <code>transform: rotate3d(1.6, 0.7, 0, 1deg);</code>，突然有所感悟，接着审查的结果证明了我的想法。</p>
<p>用chrome去hover了一下类名为 <code>block__content</code> 的元素看看 <code>block__image</code> 发生了什么改变</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.block--split-image</span> <span class="selector-class">.block__content</span><span class="selector-pseudo">:hover</span> + <span class="selector-class">.block__image</span> &#123;</div><div class="line">    <span class="attribute">-webkit-transition-duration</span>: <span class="number">0.5s</span>;</div><div class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.5s</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate3d</span>(0, 0, 0, 0deg) <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(0, 0, 0, 0deg) <span class="meta">!important</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/2017/05/02/论不同动画衔接之间的小技巧/item1.png" alt="审查"></p>
<p><code>block__image</code> 这个整体的 <code>transition-duration</code> 变成了0.5s，我把他改成了5s，发现它回归平面的时间变久了，同时也可以发现下方的duration已经被覆盖，说明这正是让他回到平面的时间，之后的 <code>transform: rotate3d(0, 0, 0, 0deg) !important;</code> 让他强制回到平面，因为js控制的style优先级最高。最后去js中证实一下自己。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Let's get our orbit on, man...</span></div><div class="line"><span class="keyword">var</span> orbit = &#123;</div><div class="line">    <span class="comment">// Initialize the orbiting</span></div><div class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">selector</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.elements = <span class="built_in">document</span>.querySelectorAll(selector || <span class="string">'[data-orbit]'</span>);</div><div class="line"></div><div class="line">        <span class="comment">// Set the update interval</span></div><div class="line">        <span class="keyword">this</span>.setupIntervals();</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="comment">// Setup the intervals for rotating</span></div><div class="line">    setupIntervals: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">        <span class="keyword">this</span>.elements.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</div><div class="line">            self.update(el);</div><div class="line">            <span class="keyword">this</span>.interval = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">                self.update(el);</div><div class="line">            &#125;, <span class="number">5000</span>);</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="comment">// Update the orbit rotate3d</span></div><div class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> min = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">var</span> max = <span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="comment">// Get our rotate values</span></div><div class="line">        <span class="keyword">var</span> rotate = [</div><div class="line">            (<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min) + <span class="string">'.'</span> + (<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">9</span>) + <span class="number">1</span>),</div><div class="line">            (<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min) + <span class="string">'.'</span> + (<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">9</span>) + <span class="number">1</span>)</div><div class="line">        ];</div><div class="line"></div><div class="line">        <span class="comment">// Set the transform</span></div><div class="line">        el.style.webkitTransform = <span class="string">'rotate3d('</span> + rotate[<span class="number">0</span>] + <span class="string">', '</span> + rotate[<span class="number">1</span>] + <span class="string">', 0, 1deg)'</span>;</div><div class="line">        el.style.MozTransform = <span class="string">'rotate3d('</span> + rotate[<span class="number">0</span>] + <span class="string">', '</span> + rotate[<span class="number">1</span>] + <span class="string">', 0, 1deg)'</span>;</div><div class="line">        el.style.msTransform = <span class="string">'rotate3d('</span> + rotate[<span class="number">0</span>] + <span class="string">', '</span> + rotate[<span class="number">1</span>] + <span class="string">', 0, 1deg)'</span>;</div><div class="line">        el.style.OTransform = <span class="string">'rotate3d('</span> + rotate[<span class="number">0</span>] + <span class="string">', '</span> + rotate[<span class="number">1</span>] + <span class="string">', 0, 1deg)'</span>;</div><div class="line">        el.style.transform = <span class="string">'rotate3d('</span> + rotate[<span class="number">0</span>] + <span class="string">', '</span> + rotate[<span class="number">1</span>] + <span class="string">', 0, 1deg)'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Start it up</span></div><div class="line">orbit.init();</div></pre></td></tr></table></figure>
<p>正是16-18行每隔5s执行一次update函数，update用来改变它的rotate3D。</p>
<hr>
<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p>以后遇到这种需求的时候，可以考虑利用transition的优点 —— 动画衔接连续。</p>
<ol>
<li>用js控制 <strong>操作之前</strong> 的动画，css中用transition实现 <strong>操作之前</strong> 的动画的 <code>duration</code></li>
<li>操作后用 <strong>css伪元素</strong> 控制新的 <code>duration</code> 和新的终点属性，记得要用 <code>!important</code> 让它覆盖js控制的样式</li>
<li>鼠标离开前加上塞贝尔曲线 <code>cubic-bezier(0.65, 0.05, 0.36, 1)</code>，鼠标离开后还可以加上回弹效果 <code>0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275)</code> 会有一种难以合拢，一松开就回弹的效果，让用户感觉更有活力</li>
</ol>
<p>一个简单的动画衔接就是这样，一些小技巧没什么多深的知识点也说不上有非常大的作用，因为对于我而言用户体验非常重要，这一点小细节可以看出作者的认真。希望日后可以用到自己的实践中。</p>
<p>记录于 2017-05-02 17:38</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起初&quot;&gt;&lt;a href=&quot;#起初&quot; class=&quot;headerlink&quot; title=&quot;起初&quot;&gt;&lt;/a&gt;起初&lt;/h2&gt;&lt;p&gt;今天在看到 &lt;a href=&quot;http://www.jq22.com/code/20170412005647.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3D轨道分割图像&lt;/a&gt; 这个示例的时候起初没有在意图片背后的悬浮动画，觉得这个只是加载了一张图片然后分成4块，hover上去的时候就合并在一起，就是4块图片的transition-delay不同，后来看着看着发现其实4块图片整体是有一个3D浮动的动画，而且当我hover上去的时候不管现在整体悬浮到那个位置都会顺滑的回到平面，勾起了我的好奇心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2017/05/02/论不同动画衔接之间的小技巧/item0.png&quot; alt=&quot;审查&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://www.lbinin.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>哇我回来啦</title>
    <link href="http://www.lbinin.com/2017/05/02/HelloBlog/"/>
    <id>http://www.lbinin.com/2017/05/02/HelloBlog/</id>
    <published>2017-05-02T05:47:08.000Z</published>
    <updated>2017-05-02T05:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家好！我胡汉三又回来啦~</p>
<p><img src="/2017/05/02/HelloBlog/back.jpg" alt="我回来了!"></p>
<a id="more"></a>
<p>经过一段时间的折腾终于稳定好了自己的服务器，也搭建好了Hexo接下来就是把之前的文章迁移过来然后就安心的写自己的博客啦~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好！我胡汉三又回来啦~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2017/05/02/HelloBlog/back.jpg&quot; alt=&quot;我回来了!&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://www.lbinin.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac添加环境变量及Homebrew的安装</title>
    <link href="http://www.lbinin.com/2017/04/17/Mac-Homebrew/"/>
    <id>http://www.lbinin.com/2017/04/17/Mac-Homebrew/</id>
    <published>2017-04-17T15:03:00.000Z</published>
    <updated>2017-05-02T10:09:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在安装 <strong><code>Homebrew</code></strong> 的时候遇到一些小插曲特此记录一下~</p>
<p>执行 <a href="http://docs.brew.sh/" target="_blank" rel="external">Homebrew</a> 官网提供的安装语句的时候</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ ruby <span class="_">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div></pre></td></tr></table></figure>
<p>出现以下提示信息</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">==&gt; This script will install:</div><div class="line">/usr/<span class="built_in">local</span>/bin/brew</div><div class="line">/usr/<span class="built_in">local</span>/share/doc/homebrew</div><div class="line">/usr/<span class="built_in">local</span>/share/man/man1/brew.1</div><div class="line">/usr/<span class="built_in">local</span>/share/zsh/site-functions/_brew</div><div class="line">/usr/<span class="built_in">local</span>/etc/bash_completion.d/brew</div><div class="line">/usr/<span class="built_in">local</span>/Homebrew</div><div class="line"></div><div class="line">Press RETURN to <span class="built_in">continue</span> or any other key to abort</div><div class="line">==&gt; /usr/bin/sudo /bin/mkdir -p /Library/Caches/Homebrew</div><div class="line">Password:</div><div class="line">==&gt; /usr/bin/sudo /bin/chmod g+rwx /Library/Caches/Homebrew</div><div class="line">==&gt; /usr/bin/sudo /usr/sbin/chown abc1 /Library/Caches/Homebrew</div><div class="line">==&gt; Downloading and installing Homebrew...</div><div class="line">remote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</div><div class="line">HEAD is now at 02f0189 Merge pull request <span class="comment">#2483 from MikeMcQuaid/audit-no-devel-version-alias</span></div><div class="line">==&gt; Cleaning up /Library/Caches/Homebrew...</div><div class="line">==&gt; Migrating /Library/Caches/Homebrew to /Users/abc1/Library/Caches/Homebrew...</div><div class="line">==&gt; Deleting /Library/Caches/Homebrew...</div><div class="line">Already up-to-date.</div><div class="line">Warning: /usr/<span class="built_in">local</span>/bin is not <span class="keyword">in</span> your PATH.</div><div class="line">==&gt; Installation successful!</div><div class="line"></div><div class="line">==&gt; Homebrew has enabled anonymous aggregate user behaviour analytics.</div><div class="line">Read the analytics documentation (and how to opt-out) here:</div><div class="line">  http://docs.brew.sh/Analytics.html</div><div class="line"></div><div class="line">==&gt; Next steps:</div><div class="line">- Run `brew <span class="built_in">help</span>` to get started</div><div class="line">- Further documentation: </div><div class="line">    http://docs.brew.sh</div></pre></td></tr></table></figure>
<p>接着我按照倒数第三行执行 <code>brew help</code> 命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ brew help</div><div class="line">-bash: brew: command not found</div></pre></td></tr></table></figure>
<p>提示我 <code>command not found</code> ，肯定是没有安装好。</p>
<p>这时候注意到上面</p>
<p><img src="http://img.blog.csdn.net/20170415225243403?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTEJpbmlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>有一行Warning</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: /usr/local/bin is not in your PATH.</div></pre></td></tr></table></figure>
<p>提示我目录 <code>/usr/local/bin</code> 没有在PATH这个环境变量里。</p>
<hr>
<h2 id="小插曲"><a href="#小插曲" class="headerlink" title="小插曲"></a>小插曲</h2><p>我查了资料 <a href="http://jingyan.baidu.com/article/d2b1d1029c1ea65c7e37d4c9.html" target="_blank" rel="external">http://jingyan.baidu.com/article/d2b1d1029c1ea65c7e37d4c9.html</a> ，按照上面的步骤做了之后，发现任何的命令都执行不了，<code>ls -l</code> 都无法执行！</p>
<p>后来 <a href="http://blog.csdn.net/weichuang_1/article/details/47679465" target="_blank" rel="external">Mac的控制台命令无法使用command not found</a> 按照这篇博客</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin</div><div class="line"><span class="built_in">cd</span> ~/</div><div class="line">touch .bash_profile</div><div class="line">open .bash_profile</div></pre></td></tr></table></figure>
<p>这样就打开了一个记事本，会显示你之前配置过的path，修改记事本或者不修改(建议可以把配置环境变量的语句写在里面)</p>
<p>此时输入更新命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> .bash_profile</div></pre></td></tr></table></figure>
<p>发现命令行又好啦~</p>
<hr>
<h2 id="正确添加环境变量的方法："><a href="#正确添加环境变量的方法：" class="headerlink" title="正确添加环境变量的方法："></a>正确添加环境变量的方法：</h2><p>借鉴 <a href="http://elf8848.iteye.com/blog/1582137" target="_blank" rel="external">Mac 可设置环境变量的位置、查看和添加PATH环境变量</a></p>
<p>用下面方法添加路径到PATH变量中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ export PATH=/usr/local/bin:$PATH</div></pre></td></tr></table></figure>
<p>然后用echo查看</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ echo $PATH</div></pre></td></tr></table></figure>
<p>就添加成功了~</p>
<p>再执行Homebrew安装命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<p>此时已经没有Warning~</p>
<p>并且 <code>brew help</code> 也出现了帮助手册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">LBinindeMacBook-Pro:~ abc1$ brew help</div><div class="line">Example usage:</div><div class="line">  brew search [TEXT|/REGEX/]</div><div class="line">  brew (info|home|options) [FORMULA...]</div><div class="line">  brew install FORMULA...</div><div class="line">  brew update</div><div class="line">  brew upgrade [FORMULA...]</div><div class="line">  brew uninstall FORMULA...</div><div class="line">  brew list [FORMULA...]</div><div class="line"></div><div class="line">Troubleshooting:</div><div class="line">  brew config</div><div class="line">  brew doctor</div><div class="line">  brew install -vd FORMULA</div><div class="line"></div><div class="line">Developers:</div><div class="line">  brew create [URL [--no-fetch]]</div><div class="line">  brew edit [FORMULA...]</div><div class="line">  http://docs.brew.sh/Formula-Cookbook.html</div><div class="line"></div><div class="line">Further help:</div><div class="line">  man brew</div><div class="line">  brew help [COMMAND]</div><div class="line">  brew home</div></pre></td></tr></table></figure>
<hr>
<p>至此，PATH环境变量配置以及Homebrew安装都已成功。</p>
<p>虽然有些低级错误，不过写下来牢记于心。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在安装 &lt;strong&gt;&lt;code&gt;Homebrew&lt;/code&gt;&lt;/strong&gt; 的时候遇到一些小插曲特此记录一下~&lt;/p&gt;
&lt;p&gt;执行 &lt;a href=&quot;http://docs.brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt; 官网提供的安装语句的时候&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;LBinindeMacBook-Pro:~ abc1$ ruby &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;出现以下提示信息&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://www.lbinin.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— 安装PhpMyAdmin</title>
    <link href="http://www.lbinin.com/2017/04/16/server-phpmyadmin/"/>
    <id>http://www.lbinin.com/2017/04/16/server-phpmyadmin/</id>
    <published>2017-04-16T09:26:00.000Z</published>
    <updated>2017-05-02T07:15:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先访问phpmyadmin官网首页 <a href="http://www.phpmyadmin.net/" target="_blank" rel="external">http://www.phpmyadmin.net/</a></p>
<p>进入之后点击 <strong><code>导航栏</code></strong> 的 <code>Download</code> 链接，进入下载界面，右键复制 <code>phpMyAdmin-*-all-languages.tar.gz</code> 的链接，用wget下载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget https://files.phpmyadmin.net/phpMyAdmin/4.7.0/phpMyAdmin-4.7.0-all-languages.tar.gz</span></div></pre></td></tr></table></figure>
<p>下载完成后解压</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zvxf phpMyAdmin-4.7.0-all-languages.tar.gz</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>解压完得到文件夹 <code>phpMyAdmin-4.7.0-all-languages</code>，将其移动到网站根目录并更名</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># mv phpMyAdmin-4.7.0-all-languages /usr/local/nginx/html/</span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd /usr/local/nginx/html/</span></div><div class="line">[root@iZ2844brz0xZ html]<span class="comment"># mv phpMyAdmin-4.7.0-all-languages phpmyAdmin</span></div></pre></td></tr></table></figure>
<p>然后执行 <code>cd phpmyAdmin</code> 进入安装目录，这时候可以看到目录下有一个配置文件：<code>config.sample.inc.php</code>，拷贝这个文件并编辑：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ phpmyAdmin]<span class="comment"># cp config.sample.inc.php config.inc.php</span></div><div class="line">[root@iZ2844brz0xZ phpmyAdmin]<span class="comment"># vim config.inc.php</span></div></pre></td></tr></table></figure>
<p><code>$cfg[&#39;blowfish_secret&#39;]</code> 配置项，后面默认为空，这里我们可以随便设置一个复杂的字符串，用来加密使用</p>
<p><code>$cfg[&#39;Servers&#39;][$i][&#39;host&#39;]</code> 设置为 <code>127.0.0.1</code>。建议设置成IP地址，则无论是本地还是远程只要mysql授权都没有问题，默认localhost可能会出现<code>#2002 - Permission denied — The server is not responding</code> 错误</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先访问phpmyadmin官网首页 &lt;a href=&quot;http://www.phpmyadmin.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.phpmyadmin.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;进入之后点击 &lt;strong&gt;&lt;code&gt;导航栏&lt;/code&gt;&lt;/strong&gt; 的 &lt;code&gt;Download&lt;/code&gt; 链接，进入下载界面，右键复制 &lt;code&gt;phpMyAdmin-*-all-languages.tar.gz&lt;/code&gt; 的链接，用wget下载&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# wget https://files.phpmyadmin.net/phpMyAdmin/4.7.0/phpMyAdmin-4.7.0-all-languages.tar.gz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载完成后解压&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# tar -zvxf phpMyAdmin-4.7.0-all-languages.tar.gz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— Nginx添加多个二级子域名</title>
    <link href="http://www.lbinin.com/2017/04/15/server-Nginx-domain/"/>
    <id>http://www.lbinin.com/2017/04/15/server-Nginx-domain/</id>
    <published>2017-04-15T15:52:00.000Z</published>
    <updated>2017-07-10T03:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx多文件配置二级子域名（推荐）"><a href="#Nginx多文件配置二级子域名（推荐）" class="headerlink" title="Nginx多文件配置二级子域名（推荐）"></a>Nginx多文件配置二级子域名（推荐）</h2><hr>
<p>首先，在自己的域名控制台中添加解析，这里以添加blog前缀为例</p>
<p>我用的是万网，在 <code>解析设置</code> 中 <code>添加解析</code></p>
<p><img src="http://img.blog.csdn.net/20170415235411153?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTEJpbmlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加解析"></p>
<blockquote>
<p><strong>主机记录</strong>：你想要的二级域名<br><strong>记录值</strong>：你的IP地址</p>
</blockquote>
<p>保存后，我们就完成了第一步把子域名解析到我们的服务器上。</p>
<a id="more"></a>
<hr>
<p>第二步：添加配置文件</p>
<p>进入nginx的 <code>/conf</code> 配置文件夹中，编辑 <code>nginx.conf</code> 文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd /usr/local/nginx/conf/</span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># vim nginx.conf</span></div></pre></td></tr></table></figure>
<p>在 <code>http</code> 模块中添加如下语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include /usr/local/nginx/conf/sites-enabled/*.conf;</div></pre></td></tr></table></figure>
<p>告诉这个配置文件要去包含 <code>/sites-enabled</code> 目录下的所有以 <code>.conf</code> 结尾的配置文件。<code>:wq</code> 保存。</p>
<p>此时，我们新建一个 <code>/sites-enabled</code> 文件夹，并在其中添加 <code>blog.***.com.conf</code> 文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ conf]<span class="comment"># mkdir sites-enabled</span></div><div class="line">[root@iZ2844brz0xZ sites-enabled]<span class="comment"># vim blog.***.com.conf</span></div></pre></td></tr></table></figure>
<p>在文件中添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;                              #监听端口</div><div class="line">    server_name blog.***.com;               #绑定域名</div><div class="line">    root /usr/local/nginx/html/blog/;       #网站根目录，建议使用绝对路径</div><div class="line">    index index.php index.html index.htm;   #默认文件</div><div class="line">	</div><div class="line">	#添加对php的解析</div><div class="line">	location ~ \.php$ &#123;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">	    include        /usr/local/nginx/conf/fastcgi_params;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    #添加错误页面，利于搜索引擎收录以及良好的用户体验</div><div class="line">	error_page 404 /404.html;</div><div class="line">    location /404.html &#123;</div><div class="line">        root /usr/local/nginx/html/;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">    location =/50x.html &#123;</div><div class="line">        root /usr/local/nginx/html/;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>内容可自行添加</p>
<p>最后，重启nginx即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sites-enabled]# /usr/local/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure>
<hr>
<h2 id="Nginx单文件配置二级子域名"><a href="#Nginx单文件配置二级子域名" class="headerlink" title="Nginx单文件配置二级子域名"></a>Nginx单文件配置二级子域名</h2><p>在 <code>nginx.conf</code> 文件的 <code>server</code> 模块中添加以下语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if ( $host ~* (\b(?!www\b)\w+)\.\w+\.\w+ ) &#123;</div><div class="line"> set $subdomain /$1;</div><div class="line">&#125;</div><div class="line">location / &#123;</div><div class="line"> root html$subdomain;</div><div class="line"> index index.html index.php index.htm index;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>即可解析到对应文件夹</p>
<hr>
<p>最后，重启nginx即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sites-enabled]# /usr/local/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Nginx多文件配置二级子域名（推荐）&quot;&gt;&lt;a href=&quot;#Nginx多文件配置二级子域名（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Nginx多文件配置二级子域名（推荐）&quot;&gt;&lt;/a&gt;Nginx多文件配置二级子域名（推荐）&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;首先，在自己的域名控制台中添加解析，这里以添加blog前缀为例&lt;/p&gt;
&lt;p&gt;我用的是万网，在 &lt;code&gt;解析设置&lt;/code&gt; 中 &lt;code&gt;添加解析&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170415235411153?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTEJpbmlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;添加解析&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;主机记录&lt;/strong&gt;：你想要的二级域名&lt;br&gt;&lt;strong&gt;记录值&lt;/strong&gt;：你的IP地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;保存后，我们就完成了第一步把子域名解析到我们的服务器上。&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— 安装vsftpd及配置</title>
    <link href="http://www.lbinin.com/2017/04/15/server-vsftpd/"/>
    <id>http://www.lbinin.com/2017/04/15/server-vsftpd/</id>
    <published>2017-04-15T10:47:00.000Z</published>
    <updated>2017-05-02T07:15:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h2><hr>
<p>用 <code>yum</code> 安装我们需要的 <code>vsftpd</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# sudo yum install vsftpd</div></pre></td></tr></table></figure>
<hr>
<h2 id="配置vsftpd"><a href="#配置vsftpd" class="headerlink" title="配置vsftpd"></a>配置vsftpd</h2><p>安装完成后可以找到 <code>/etc/vsftpd/vsftpd.conf</code> ，这就是vsftp的配置文件。</p>
<p>接下来我们需要添加一个ftp用户，这个用户就是用来登录ftp服务器用的。<code>useradd</code> 后的用户名可以自定义</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ vsftpd]# useradd linbin</div></pre></td></tr></table></figure>
<p>添加完用户后，给该用户添加密码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ vsftpd]# passwd linbin</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>接下来输入两次密码以确认。提示 <code>passwd: all authentication tokens updated successfully.</code> 设置密码成功。</p>
<p>接下启动 <code>vsftpd</code>服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ vsftpd]#service vsftpd start</div></pre></td></tr></table></figure>
<p>接下来就可以在FileZilla中用ftp用户登录我们的服务器啦~</p>
<p>修改用户默认目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ vsftpd]# vim /etc/passwd</div></pre></td></tr></table></figure>
<p>找到你的用户名你一行，修改路径，然后保存即可（这里passwd文件也可以更改用户权限）</p>
<hr>
<p>附<br>-<br>vsftpd操作命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ vsftpd]#service vsftpd start    --启动ftp命令</div><div class="line">[root@iZ2844brz0xZ vsftpd]#service vsftpd stop     --停止ftp命令</div><div class="line">[root@iZ2844brz0xZ vsftpd]#service vsftpd restart  --重启ftp命令</div></pre></td></tr></table></figure>
<hr>
<table>
<thead>
<tr>
<th style="text-align:left">路径</th>
<th style="text-align:left">文件</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/etc/vsftpd/vsftpd.conf</td>
<td style="text-align:left">主配置文件</td>
</tr>
<tr>
<td style="text-align:left">/usr/sbin/vsftpd</td>
<td style="text-align:left">Vsftpd的主程序</td>
</tr>
<tr>
<td style="text-align:left">/etc/rc.d/init.d/vsftpd</td>
<td style="text-align:left">启动脚本</td>
</tr>
<tr>
<td style="text-align:left">/etc/pam.d/vsftpd</td>
<td style="text-align:left">PAM认证文件（此文件中file=/etc/vsftpd/ftpusers字段，指明阻止访问的用户来自/etc/vsftpd/ftpusers文件中的用户）</td>
</tr>
<tr>
<td style="text-align:left">/etc/vsftpd/ftpusers</td>
<td style="text-align:left">禁止使用vsftpd的用户列表文件。记录不允许访问FTP服务器的用户名单，管理员可以把一些对系统安全有威胁的用户账号记录在此文件中，以免用户从FTP登录后获得大于上传下载操作的权利，而对系统造成损坏。（注意：linux-4中此文件在/etc/目录下）</td>
</tr>
<tr>
<td style="text-align:left">/etc/vsftpd/user_list</td>
<td style="text-align:left">禁止或允许使用vsftpd的用户列表文件。这个文件中指定的用户缺省情况（即在/etc/vsftpd/vsftpd.conf中设置userlist_deny=YES）下也不能访问FTP服务器，在设置了userlist_deny=NO时,仅允许user_list中指定的用户访问FTP服务器。（注意：linux-4中此文件在/etc/目录下）</td>
</tr>
<tr>
<td style="text-align:left">/var/ftp</td>
<td style="text-align:left">匿名用户主目录；本地用户主目录为：/home/用户主目录，即登录后进入自己家目录</td>
</tr>
<tr>
<td style="text-align:left">/var/ftp/pub</td>
<td style="text-align:left">匿名用户的下载目录，此目录需赋权根chmod 1777 pub（1为特殊权限，使上载后无法删除）</td>
</tr>
<tr>
<td style="text-align:left">/etc/logrotate.d/vsftpd.log</td>
<td style="text-align:left">Vsftpd的日志文件</td>
</tr>
</tbody>
</table>
<hr>
<blockquote>
<p><a href="http://os.51cto.com/art/201008/222036.htm" target="_blank" rel="external">vsftpd入门——安装、配置、案例与常见问题</a> </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装vsftpd&quot;&gt;&lt;a href=&quot;#安装vsftpd&quot; class=&quot;headerlink&quot; title=&quot;安装vsftpd&quot;&gt;&lt;/a&gt;安装vsftpd&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;用 &lt;code&gt;yum&lt;/code&gt; 安装我们需要的 &lt;code&gt;vsftpd&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]# sudo yum install vsftpd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;配置vsftpd&quot;&gt;&lt;a href=&quot;#配置vsftpd&quot; class=&quot;headerlink&quot; title=&quot;配置vsftpd&quot;&gt;&lt;/a&gt;配置vsftpd&lt;/h2&gt;&lt;p&gt;安装完成后可以找到 &lt;code&gt;/etc/vsftpd/vsftpd.conf&lt;/code&gt; ，这就是vsftp的配置文件。&lt;/p&gt;
&lt;p&gt;接下来我们需要添加一个ftp用户，这个用户就是用来登录ftp服务器用的。&lt;code&gt;useradd&lt;/code&gt; 后的用户名可以自定义&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ vsftpd]# useradd linbin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加完用户后，给该用户添加密码。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ vsftpd]# passwd linbin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— Nginx的安装和配置</title>
    <link href="http://www.lbinin.com/2017/04/15/server-nginx/"/>
    <id>http://www.lbinin.com/2017/04/15/server-nginx/</id>
    <published>2017-04-15T08:18:00.000Z</published>
    <updated>2017-05-02T07:17:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx安装："><a href="#Nginx安装：" class="headerlink" title="Nginx安装："></a>Nginx安装：</h2><p><strong><em>下载解压安装</em></strong></p>
<hr>
<p>进入Nginx官网站 <a href="http://nginx.org/" target="_blank" rel="external">http://nginx.org/</a>，进入后选择最新的版本，进入页面后在 <code>Stable version</code> 中选择 <code>nginx-*</code> 右键复制链接，然后用 <code>wget</code> 下载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget http://nginx.org/download/nginx-1.12.0.tar.gz</span></div></pre></td></tr></table></figure>
<p>如果提示wget命令未找到，则执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># sudo yum install wget</span></div></pre></td></tr></table></figure>
<p>下载完用 <code>ll</code> 命令查看刚刚下载获得的 <code>nginx-*.tar.gz</code> 文件，用下面命令解压它</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf nginx-1.12.0.tar.gz</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p><strong>-z</strong>: 表示使用gzip的属性。<br><strong>-x</strong>: 解开一个压缩文件的参数指令。<br><strong>-v</strong>: 表示压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！<br><strong>-f</strong>: 使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！</p>
<p><a href="http://jingyan.baidu.com/article/86112f13605d30273697876e.html?st=2&amp;os=0&amp;bd_page_type=1&amp;net_type=1" target="_blank" rel="external">参考资料</a></p>
</blockquote>
<hr>
<p>安装Nginx前，需要安装以下三个依赖包：</p>
<ol>
<li><p>gzip 模块需要 <code>zlib</code> 库</p>
</li>
<li><p>rewrite 模块需要 <code>pcre</code> 库</p>
</li>
<li><p>ssl 功能需要 <code>openssl</code> 库</p>
</li>
</ol>
<p><a href="https://www.openssl.org/source/" target="_blank" rel="external">https://www.openssl.org/source/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget https://www.openssl.org/source/openssl-fips-2.0.14.tar.gz</span></div></pre></td></tr></table></figure>
<p><a href="http://www.zlib.net/" target="_blank" rel="external">http://www.zlib.net/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget http://www.zlib.net/zlib-1.2.11.tar.gz</span></div></pre></td></tr></table></figure>
<p>(<a href="http://www.pcre.org/)[http://www.pcre.org/" target="_blank" rel="external">http://www.pcre.org/)[http://www.pcre.org/</a>]</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz</span></div></pre></td></tr></table></figure>
<p>下载完成后安装，依赖包安装顺序依次为: <code>openssl</code>、<code>zlib</code>、<code>pcre</code>, 然后安装 <code>Nginx</code> 包</p>
<hr>
<p>1.安装openssl</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf openssl-fips-2.0.14.tar.gz </span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd openssl-fips-2.0.14/</span></div><div class="line">[root@iZ2844brz0xZ openssl-fips-2.0.14]<span class="comment"># ./config </span></div><div class="line">[root@iZ2844brz0xZ openssl-fips-2.0.14]<span class="comment"># make</span></div><div class="line">[root@iZ2844brz0xZ openssl-fips-2.0.14]<span class="comment"># make install</span></div></pre></td></tr></table></figure>
<p>2.安装zlib</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf zlib-1.2.11.tar.gz </span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd zlib-1.2.11/</span></div><div class="line">[root@iZ2844brz0xZ zlib-1.2.11]<span class="comment"># ./configure </span></div><div class="line">[root@iZ2844brz0xZ zlib-1.2.11]<span class="comment"># make</span></div><div class="line">[root@iZ2844brz0xZ zlib-1.2.11]<span class="comment"># make install</span></div></pre></td></tr></table></figure>
<p>3.安装pcre</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf pcre-8.39.tar.gz </span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd pcre-8.39/</span></div><div class="line">[root@iZ2844brz0xZ pcre-8.39]<span class="comment"># ./configure </span></div><div class="line">[root@iZ2844brz0xZ pcre-8.39]<span class="comment"># make</span></div><div class="line">[root@iZ2844brz0xZ pcre-8.39]<span class="comment"># make install</span></div></pre></td></tr></table></figure>
<p>4.安装nginx</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf nginx-1.12.0.tar.gz </span></div><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd nginx-1.12.0/</span></div><div class="line">[root@iZ2844brz0xZ nginx-1.12.0]<span class="comment"># ./configure --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-openssl=../openssl-fips-2.0.14</span></div><div class="line">[root@iZ2844brz0xZ nginx-1.12.0]<span class="comment"># make</span></div><div class="line">[root@iZ2844brz0xZ nginx-1.12.0]<span class="comment"># make install</span></div></pre></td></tr></table></figure>
<hr>
<p>检测是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ nginx-1.12.0]<span class="comment"># cd /usr/local/nginx/sbin/</span></div><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./nginx -t</span></div></pre></td></tr></table></figure>
<p>若出现下方信息表示安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nginx: the configuration file /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</div></pre></td></tr></table></figure>
<p>最后一步：启动Nginx</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./nginx</span></div></pre></td></tr></table></figure>
<p>查看端口</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># netstat -ntlp</span></div></pre></td></tr></table></figure>
<p>出现以下结果</p>
<p><img src="http://img.blog.csdn.net/20170415170211580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTEJpbmlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<hr>
<p>至此，Nginx安装结束</p>
<p>参考资料：</p>
<blockquote>
<p><a href="http://www.cnblogs.com/hzh19870110/p/6100661.html" target="_blank" rel="external">http://www.cnblogs.com/hzh19870110/p/6100661.html</a> <em>作者：grhlove123</em></p>
</blockquote>
<h2 id="配置php-fpm"><a href="#配置php-fpm" class="headerlink" title="配置php-fpm"></a>配置php-fpm</h2><p>进入php的 <code>sbin</code> 目录下启动 <code>php-fpm</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd /usr/local/php7/sbin/</span></div><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./php-fpm</span></div></pre></td></tr></table></figure>
<p>（若提示没有权限，在命令前加上 <code>sudo</code> 即可。）</p>
<p>发现提示下方信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[15-Apr-2017 17:06:21] ERROR: failed to open configuration file <span class="string">'/usr/local/php7/etc/php-fpm.conf'</span>: No such file or directory (2)</div><div class="line">[15-Apr-2017 17:06:21] ERROR: failed to load configuration file <span class="string">'/usr/local/php7/etc/php-fpm.conf'</span></div><div class="line">[15-Apr-2017 17:06:21] ERROR: FPM initialization failed</div></pre></td></tr></table></figure>
<p>告诉我们在 <code>/usr/local/php7/etc/</code> 目录下没有找到 <code>php-fpm.conf</code> 配置文件。</p>
<p>那我们进入对应文件夹查看文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># cd /usr/local/php7/etc/</span></div><div class="line">[root@iZ2844brz0xZ etc]<span class="comment"># ll</span></div></pre></td></tr></table></figure>
<p>显示</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">total 16</div><div class="line">-rw-r--r-- 1 root root 1239 Apr 15 07:33 pear.conf</div><div class="line">-rw-r--r-- 1 root root 4468 Apr 15 07:33 php-fpm.conf.default</div><div class="line">drwxr-xr-x 2 root root 4096 Apr 15 07:33 php-fpm.d</div></pre></td></tr></table></figure>
<p>发现 <code>php-fpm.conf</code> 多了一个 <code>default</code> 结尾，我们只需要把文件重新命名就好了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ etc]<span class="comment"># mv php-fpm.conf.default php-fpm.conf --利用mv移动命令更改名字</span></div></pre></td></tr></table></figure>
<p>重新进入php的 <code>sbin</code> 目录下启动 <code>php-fpm</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ etc]<span class="comment"># cd /usr/local/php7/sbin/</span></div><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./php-fpm</span></div></pre></td></tr></table></figure>
<p>这时候提示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[15-Apr-2017 17:08:23] WARNING: Nothing matches the include pattern <span class="string">'/usr/local/php7/etc/php-fpm.d/*.conf'</span> from /usr/<span class="built_in">local</span>/php7/etc/php-fpm.conf at line 125.</div><div class="line">[15-Apr-2017 17:08:23] ERROR: No pool defined. at least one pool section must be specified <span class="keyword">in</span> config file</div><div class="line">[15-Apr-2017 17:08:23] ERROR: failed to post process the configuration</div><div class="line">[15-Apr-2017 17:08:23] ERROR: FPM initialization failed</div></pre></td></tr></table></figure>
<p>告诉我们在 <code>/usr/local/php7/etc/php-fpm.d/</code> 目录下没有找到 <code>.conf</code> 文件，问题出在125行，我们用vim编辑文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># vim /usr/local/php7/etc/php-fpm.conf</span></div></pre></td></tr></table></figure>
<p>进入后输入命令 <code>:125</code> 跳转到125行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include=/usr/local/php7/etc/php-fpm.d/*.conf</div></pre></td></tr></table></figure>
<p>给我们的信息是要找 <code>php-fpm.d</code> 目录下的以 <code>.conf</code> 结尾的文件，输入<code>:q!</code> 退出，进入对应文件夹，查看文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># cd /usr/local/php7/etc/php-fpm.d/</span></div><div class="line">[root@iZ2844brz0xZ php-fpm.d]<span class="comment"># ll</span></div></pre></td></tr></table></figure>
<p>发现以下文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">total 20</div><div class="line">-rw-r--r-- 1 root root 18521 Apr 15 07:33 www.conf.default</div></pre></td></tr></table></figure>
<p>重命名</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-fpm.d]<span class="comment"># mv www.conf.default www.conf</span></div></pre></td></tr></table></figure>
<p>回到 <code>sbin</code> 目录下重新启动 <code>php-fpm</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-fpm.d]<span class="comment"># cd /usr/local/php7/sbin/</span></div><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./php-fpm</span></div></pre></td></tr></table></figure>
<p>若没有提示信息表明php-fpm启动成功啦~</p>
<p>用以下命令查看fpm进程</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># ps aux | grep php-fpm</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>进入Nginx目录，编辑 <code>nginx.conf</code> 配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ nginx]<span class="comment"># cd /usr/local/nginx/</span></div><div class="line">[root@iZ2844brz0xZ nginx]<span class="comment"># cd conf/</span></div><div class="line">[root@iZ2844brz0xZ conf]<span class="comment"># vim nginx.conf</span></div></pre></td></tr></table></figure>
<p>看到 <code>server</code> 模块下有：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">            root   html;</div><div class="line">            index  index.html index.htm;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>这段表示所有的文件都会进入html这个目录下，我们现在编写与php相关的语句</p>
<p>在下面我们可以找到配置文件已经帮我们写好了我们只需要把前面的注释符号 <code>#</code> 去掉就好了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location ~ \.php$ &#123;</div><div class="line">            root           html;</div><div class="line">            fastcgi_pass   127.0.0.1:9000;</div><div class="line">            fastcgi_index  index.php;</div><div class="line">            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">            include        fastcgi_params;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>输入<code>:wq</code> 保存退出</p>
<p>进入nginx的<code>html</code> 目录，新建一个文件测试一下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ conf]<span class="comment"># cd ..</span></div><div class="line">[root@iZ2844brz0xZ nginx]<span class="comment"># cd html/</span></div><div class="line">[root@iZ2844brz0xZ html]<span class="comment"># vim test.php</span></div></pre></td></tr></table></figure>
<p>输入</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	phpinfo();</div></pre></td></tr></table></figure>
<p>忘了说，修改完配置文件记得要重新启动nginx哦</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd /usr/local/nginx/sbin/</span></div><div class="line">[root@iZ2844brz0xZ sbin]<span class="comment"># ./nginx -s reload</span></div></pre></td></tr></table></figure>
<p>打开网址，运行成功~</p>
<hr>
<h2 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h2><blockquote>
<p><a href="https://segmentfault.com/a/1190000007322358" target="_blank" rel="external">Nginx和php-fpm的运行原理</a> <em>作者：zilu</em> （写的很棒~）</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Nginx安装：&quot;&gt;&lt;a href=&quot;#Nginx安装：&quot; class=&quot;headerlink&quot; title=&quot;Nginx安装：&quot;&gt;&lt;/a&gt;Nginx安装：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;下载解压安装&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;进入Nginx官网站 &lt;a href=&quot;http://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nginx.org/&lt;/a&gt;，进入后选择最新的版本，进入页面后在 &lt;code&gt;Stable version&lt;/code&gt; 中选择 &lt;code&gt;nginx-*&lt;/code&gt; 右键复制链接，然后用 &lt;code&gt;wget&lt;/code&gt; 下载&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# wget http://nginx.org/download/nginx-1.12.0.tar.gz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果提示wget命令未找到，则执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# sudo yum install wget&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载完用 &lt;code&gt;ll&lt;/code&gt; 命令查看刚刚下载获得的 &lt;code&gt;nginx-*.tar.gz&lt;/code&gt; 文件，用下面命令解压它&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# tar -zxvf nginx-1.12.0.tar.gz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— 安装Mysql</title>
    <link href="http://www.lbinin.com/2017/04/15/server-mysql/"/>
    <id>http://www.lbinin.com/2017/04/15/server-mysql/</id>
    <published>2017-04-15T02:20:00.000Z</published>
    <updated>2017-05-02T07:16:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mysql安装："><a href="#Mysql安装：" class="headerlink" title="Mysql安装："></a>Mysql安装：</h2><p><strong><em>下载解压安装</em></strong></p>
<hr>
<h2 id="2017-4-16更新"><a href="#2017-4-16更新" class="headerlink" title="2017.4.16更新"></a><em>2017.4.16更新</em></h2><p>说说遇到的坑吧，首先对mysql的make命令，真的是编译一天！编译了一天就不说了，最后还有奇奇怪怪的问题！结果还没有安装成功！</p>
<p>现在我决定换一个安装方式！</p>
<p>说一下我的操作系统是 <code>CentOS7</code>，查资料发现是CentOS7版本将MySQL数据库软件从默认的程序列表中移除，用mariadb代替了，这样，我们回归寻常路</p>
<p>CentOS 7的yum源中貌似没有正常安装mysql时的mysql-sever文件，需要去官网上下载</p>
<a id="more"></a>
<p>安装 <code>mysql-community-server</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div><div class="line">[root@iZ2844brz0xZ ~]# rpm -ivh mysql-community-release-el7-5.noarch.rpm</div><div class="line">[root@iZ2844brz0xZ ~]# yum install mysql-community-server</div></pre></td></tr></table></figure>
<p>成功安装之后启动<code>mysql</code> 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# service mysqld start</div></pre></td></tr></table></figure>
<p>初次安装mysql的时候，root账户是没有密码的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# mysql -u root -p</div><div class="line">Enter password:</div></pre></td></tr></table></figure>
<p>要求输入密码的时候直接回车，因为没有密码，进入到mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SET PASSWORD FOR &apos;root&apos;@&apos;localhost&apos; = PASSWORD(&apos;newPassword&apos;);</div></pre></td></tr></table></figure>
<p>其中 <code>newPassword</code> 为你为 <code>root</code> 账户设置的密码。</p>
<p>若提示下面信息则表示设置成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Query OK, 0 rows affected (0.02 sec)</div></pre></td></tr></table></figure>
<p>退出，搞定~</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; exit</div></pre></td></tr></table></figure>
<hr>
<h2 id="手动编译版本："><a href="#手动编译版本：" class="headerlink" title="手动编译版本："></a>手动编译版本：</h2><p><a href="https://dev.mysql.com/downloads/mysql/，进入后在下方选择" target="_blank" rel="external">https://dev.mysql.com/downloads/mysql/，进入后在下方选择</a> <strong><code>source code</code></strong> 版本，选择 <code>Generic Linux (Architecture Independent), Compressed TAR Archive</code>，右键复制链接，用下面命令下载后得到 <code>.tar.gz</code> 的包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz</div></pre></td></tr></table></figure>
<p>如果提示wget命令为找到，则执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# sudo yum install wget</div></pre></td></tr></table></figure>
<p>下载完用 <code>ll</code> 命令查看刚刚下载获得的 <code>mysql-**.**.**.tar.gz</code> 文件，用下面命令解压并解包它</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# tar -zxvf mysql-5.7.18.tar.gz</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>-z</strong>: 表示使用gzip的属性。<br><strong>-x</strong>: 解开一个压缩文件的参数指令。<br><strong>-v</strong>: 表示压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！<br><strong>-f</strong>: 使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！</p>
<p><a href="http://jingyan.baidu.com/article/86112f13605d30273697876e.html?st=2&amp;os=0&amp;bd_page_type=1&amp;net_type=1" target="_blank" rel="external">参考资料</a></p>
</blockquote>
<p>接下来我们用yum来安装我们需要的依赖和工具。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# sudo yum install cmake gcc-c++ ncurses-devel perl-Data-Dumper boost boost-doc boost-devel</div></pre></td></tr></table></figure>
<hr>
<h2 id="Mysql安装：-1"><a href="#Mysql安装：-1" class="headerlink" title="Mysql安装："></a>Mysql安装：</h2><p><strong><em>编译安装</em></strong></p>
<p>进入mysql目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# cd mysql-5.7.18/</div></pre></td></tr></table></figure>
<p>用cmake命令编译，代码如下，后面的均为配置数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]# cmake -DCMAKE_INSTALL_PREFIX=/home/mysql -DMYSQL_DATADIR=/home/mysql/data -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DMYSQL_USER=mysql -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost</div></pre></td></tr></table></figure>
<p>cmake命令结束后，使用make命令进行编译（过程有点慢）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ mysql-5.7.18]# make</div></pre></td></tr></table></figure>
<p>make编译完成后，用下面命令安装Mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ mysql-5.7.18]# sudo make install</div></pre></td></tr></table></figure>
<p>安装结束后，使用 <code>mysqld</code> 命令启动Mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ mysql-5.7.18]# mysqld</div></pre></td></tr></table></figure>
<p>启动后，使用mysql命令进入Mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ mysql-5.7.18]# mysql</div></pre></td></tr></table></figure>
<p>若显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>表明进入mysql，安装成功。</p>
<hr>
<h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>在这里特别提醒， 对于mysql5.7.8的make编译， 如果是阿里云centos主机512M内存的， 会在make编译到45%左右的时候会报错， 这是内存不足所致。</p>
<p>那么设置2G交换分区来用下 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ /]# dd if=/dev/zero of=/swapfile bs=1k count=2048000 --获取要增加的2G的SWAP文件块（执行命令后需要等待一段时间）</div><div class="line">[root@iZ2844brz0xZ /]# mkswap /swapfile     -- 创建SWAP文件</div><div class="line">[root@iZ2844brz0xZ /]# swapon /swapfile     -- 激活SWAP文件</div><div class="line">[root@iZ2844brz0xZ /]# swapon -s            -- 查看SWAP信息是否正确</div><div class="line">[root@iZ2844brz0xZ /]# echo &quot;/var/swapfile swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab     -- 添加到fstab文件中让系统引导时自动启动</div></pre></td></tr></table></figure></p>
<p>注意, swapfile文件的路径在 <code>/var/</code> 下 </p>
<p>编译完后, 如果不想要交换分区了, 可以删除:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ /]# swapoff /swapfile</div><div class="line">[root@iZ2844brz0xZ /]# rm -fr /swapfile</div></pre></td></tr></table></figure>
<p>实际操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ /]# dd if=/dev/zero of=/swapfile bs=1k count=2048000</div><div class="line">2048000+0 records in</div><div class="line">2048000+0 records out</div><div class="line">2097152000 bytes (2.1 GB) copied, 42.2248 s, 49.7 MB/s</div><div class="line">[root@iZ2844brz0xZ /]# mkswap /swapfile</div><div class="line">Setting up swapspace version 1, size = 2047996 KiB</div><div class="line">no label, UUID=5f8de87f-9057-4bf7-af9d-a09e1be7de56</div><div class="line">[root@iZ2844brz0xZ /]# swapon /swapfile</div><div class="line">swapon: /swapfile: insecure permissions 0644, 0600 suggested.</div><div class="line">[root@iZ2844brz0xZ /]# swapon -s</div><div class="line">Filename				Type		Size	Used	Priority</div><div class="line">/swapfile                              	file	2047996	0	-1</div><div class="line">[root@iZ2844brz0xZ /]# echo &quot;/var/swapfile swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab</div><div class="line">[root@iZ2844brz0xZ /]#</div></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://blog.csdn.net/cryhelyxx/article/details/47610247" target="_blank" rel="external">参考资料</a> <em>作者：zhuxiongxian</em></p>
</blockquote>
<hr>
<p>至此，Mysql安装结束</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mysql安装：&quot;&gt;&lt;a href=&quot;#Mysql安装：&quot; class=&quot;headerlink&quot; title=&quot;Mysql安装：&quot;&gt;&lt;/a&gt;Mysql安装：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;下载解压安装&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2017-4-16更新&quot;&gt;&lt;a href=&quot;#2017-4-16更新&quot; class=&quot;headerlink&quot; title=&quot;2017.4.16更新&quot;&gt;&lt;/a&gt;&lt;em&gt;2017.4.16更新&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;说说遇到的坑吧，首先对mysql的make命令，真的是编译一天！编译了一天就不说了，最后还有奇奇怪怪的问题！结果还没有安装成功！&lt;/p&gt;
&lt;p&gt;现在我决定换一个安装方式！&lt;/p&gt;
&lt;p&gt;说一下我的操作系统是 &lt;code&gt;CentOS7&lt;/code&gt;，查资料发现是CentOS7版本将MySQL数据库软件从默认的程序列表中移除，用mariadb代替了，这样，我们回归寻常路&lt;/p&gt;
&lt;p&gt;CentOS 7的yum源中貌似没有正常安装mysql时的mysql-sever文件，需要去官网上下载&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>配置服务器 —— 安装PHP</title>
    <link href="http://www.lbinin.com/2017/04/14/server-php/"/>
    <id>http://www.lbinin.com/2017/04/14/server-php/</id>
    <published>2017-04-14T15:49:00.000Z</published>
    <updated>2017-05-02T06:59:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP安装："><a href="#PHP安装：" class="headerlink" title="PHP安装："></a>PHP安装：</h2><p><strong><em>下载解压安装</em></strong></p>
<hr>
<p>进入Php官方 <a href="https://secure.php.net/" target="_blank" rel="external">https://secure.php.net/</a>，进入后选择右边要download的版本，选择.tar.gz结尾的包，进入后选择节点，可以选择Hong Kong节点，对第一个a标签右键复制链接</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># wget http://hk1.php.net/get/php-7.1.4.tar.gz/from/this/mirror</span></div></pre></td></tr></table></figure>
<p>如果提示wget命令为找到，则执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># sudo yum install wget</span></div></pre></td></tr></table></figure>
<p>下载完用 <code>ll</code> 命令查看刚刚下载获得的 <code>mirror</code> 文件，用下面命令解压它</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># tar -zxvf mirror</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p><strong>-z</strong>: 表示使用gzip的属性。<br><strong>-x</strong>: 解开一个压缩文件的参数指令。<br><strong>-v</strong>: 表示压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！<br><strong>-f</strong>: 使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！</p>
<p><a href="http://jingyan.baidu.com/article/86112f13605d30273697876e.html?st=2&amp;os=0&amp;bd_page_type=1&amp;net_type=1" target="_blank" rel="external">参考资料</a></p>
</blockquote>
<hr>
<p>单纯的安装完PHP是不能和Nginx一起工作的，只能和Apache一起工作，这时候我们需要安装PHPFPM</p>
<p>进入php目录，安装依赖包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># cd php-7.1.4/</span></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># yum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel</span></div></pre></td></tr></table></figure>
<p>依赖包安装完成后，编译配置（如果出现错误，基本都是上一步的依赖文件没有安装所致）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># ./configure \</span></div><div class="line">--prefix=/usr/<span class="built_in">local</span>/php \</div><div class="line">--with-config-file-path=/etc \</div><div class="line">--enable-fpm \</div><div class="line">--with-fpm-user=nginx  \</div><div class="line">--with-fpm-group=nginx \</div><div class="line">--enable-inline-optimization \</div><div class="line">--disable-debug \</div><div class="line">--disable-rpath \</div><div class="line">--enable-shared  \</div><div class="line">--enable-soap \</div><div class="line">--with-libxml-dir \</div><div class="line">--with-xmlrpc \</div><div class="line">--with-openssl \</div><div class="line">--with-mcrypt \</div><div class="line">--with-mhash \</div><div class="line">--with-pcre-regex \</div><div class="line">--with-sqlite3 \</div><div class="line">--with-zlib \</div><div class="line">--enable-bcmath \</div><div class="line">--with-iconv \</div><div class="line">--with-bz2 \</div><div class="line">--enable-calendar \</div><div class="line">--with-curl \</div><div class="line">--with-cdb \</div><div class="line">--enable-dom \</div><div class="line">--enable-exif \</div><div class="line">--enable-fileinfo \</div><div class="line">--enable-filter \</div><div class="line">--with-pcre-dir \</div><div class="line">--enable-ftp \</div><div class="line">--with-gd \</div><div class="line">--with-openssl-dir \</div><div class="line">--with-jpeg-dir \</div><div class="line">--with-png-dir \</div><div class="line">--with-zlib-dir  \</div><div class="line">--with-freetype-dir \</div><div class="line">--enable-gd-native-ttf \</div><div class="line">--enable-gd-jis-conv \</div><div class="line">--with-gettext \</div><div class="line">--with-gmp \</div><div class="line">--with-mhash \</div><div class="line">--enable-json \</div><div class="line">--enable-mbstring \</div><div class="line">--enable-mbregex \</div><div class="line">--enable-mbregex-backtrack \</div><div class="line">--with-libmbfl \</div><div class="line">--with-onig \</div><div class="line">--enable-pdo \</div><div class="line">--with-mysqli=mysqlnd \</div><div class="line">--with-pdo-mysql=mysqlnd \</div><div class="line">--with-zlib-dir \</div><div class="line">--with-pdo-sqlite \</div><div class="line">--with-readline \</div><div class="line">--enable-session \</div><div class="line">--enable-shmop \</div><div class="line">--enable-simplexml \</div><div class="line">--enable-sockets  \</div><div class="line">--enable-sysvmsg \</div><div class="line">--enable-sysvsem \</div><div class="line">--enable-sysvshm \</div><div class="line">--enable-wddx \</div><div class="line">--with-libxml-dir \</div><div class="line">--with-xsl \</div><div class="line">--enable-zip \</div><div class="line">--enable-mysqlnd-compression-support \</div><div class="line">--with-pear \</div><div class="line">--enable-opcache</div></pre></td></tr></table></figure>
<p>prefix为安装路径，我们指定为 <code>/usr/local/php7</code> ，后面的 <code>with-config-file-path</code> 为配置文件的位置。</p>
<p>开始正式安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># make</span></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># make install</span></div></pre></td></tr></table></figure>
<p>如果提示 <code>Thank you for using PHP</code> 表示安装成功。</p>
<p>接下来配置环境变量</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># vi /etc/profile</span></div></pre></td></tr></table></figure>
<p>在末尾追加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PATH=$PATH:/usr/local/php/bin</div><div class="line">export PATH</div></pre></td></tr></table></figure>
<p>添加完成后，用 <code>source</code> 执行命令使得改动立即生效</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># source /etc/profile</span></div></pre></td></tr></table></figure>
<p>接下来</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># cp php.ini-production /etc/php.ini</span></div><div class="line"></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span></div><div class="line"></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf</span></div><div class="line"></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span></div><div class="line"></div><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># chmod +x /etc/init.d/php-fpm</span></div></pre></td></tr></table></figure>
<p>最后启动php-fpm~</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ php-7.1.4]<span class="comment"># /etc/init.d/php-fpm start</span></div></pre></td></tr></table></figure>
<p>OK，成功！</p>
<p>安装完成后进入 <code>~</code> 目录，创建一个测试用例</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># vim test.php</span></div></pre></td></tr></table></figure>
<blockquote>
<p>若没有Vim，用 <code>sudo yum install vim</code> 安装vim</p>
</blockquote>
<p>写上</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	phpinfo();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>执行php文件，<code>bin</code> 前面是安装php的路径，用 <code>bin</code> 下的 <code>php</code> 执行我们的 <code>test.php</code> 文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZ2844brz0xZ ~]<span class="comment"># /usr/local/php7/bin/php test.php</span></div></pre></td></tr></table></figure>
<p>若打印出php信息，表明我们的php安装成功</p>
<hr>
<p>至此，PHP安装结束</p>
<h2 id="附参考资料"><a href="#附参考资料" class="headerlink" title="附参考资料"></a>附参考资料</h2><ul>
<li><a href="http://www.jianshu.com/p/246ffcd5e77d" target="_blank" rel="external">Centos7 安装 PHP7最新版</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;PHP安装：&quot;&gt;&lt;a href=&quot;#PHP安装：&quot; class=&quot;headerlink&quot; title=&quot;PHP安装：&quot;&gt;&lt;/a&gt;PHP安装：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;下载解压安装&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;进入Php官方 &lt;a href=&quot;https://secure.php.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://secure.php.net/&lt;/a&gt;，进入后选择右边要download的版本，选择.tar.gz结尾的包，进入后选择节点，可以选择Hong Kong节点，对第一个a标签右键复制链接&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# wget http://hk1.php.net/get/php-7.1.4.tar.gz/from/this/mirror&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果提示wget命令为找到，则执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# sudo yum install wget&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载完用 &lt;code&gt;ll&lt;/code&gt; 命令查看刚刚下载获得的 &lt;code&gt;mirror&lt;/code&gt; 文件，用下面命令解压它&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@iZ2844brz0xZ ~]&lt;span class=&quot;comment&quot;&gt;# tar -zxvf mirror&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.lbinin.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
</feed>
